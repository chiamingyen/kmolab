<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kmolab (虎尾科大MDE)</title><link href="http://chiamingyen.github.io/kmolab/blog/" rel="alternate"></link><link href="http://chiamingyen.github.io/kmolab/blog/feeds/courses.atom.xml" rel="self"></link><id>http://chiamingyen.github.io/kmolab/blog/</id><updated>2016-03-30T23:59:43+08:00</updated><entry><title>任務一 2D 協同繪圖之二</title><link href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu-zhi-er.html" rel="alternate"></link><updated>2016-03-30T23:59:43+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-30:kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu-zhi-er.html</id><summary type="html">&lt;p&gt;這裡要介紹的是 scrum-2 組員利用 forked cdw2 倉儲版本, git clone 到近端後, 以 git checkout gh-pages 轉到 Github Pages 對應的網頁資料上工作.&lt;/p&gt;


&lt;p&gt;在 users/s2a/g100 目錄下建立 scrum2.leo 後, 就利用 Leo Editor 在 content 目錄中, 建立 .md 檔案, 完成後先在近端利用 local-pelican 測試結果, 若能夠正確轉換 Pelican post 目錄中的網誌, 就可以再用 gh-pages-pelican 按鈕, 將 post 目錄中轉成遠端網頁所需要的格式 (主要是讓 disqus 留言系統可以正常運作).&lt;/p&gt;
&lt;p&gt;然後 scrum-2 用戶就可以利用 git add -A, git commit -m "提交註記訊息", 以及 git push origin gh-pages 將近端的版本提交推送到 scrum-2 自己 forked 的 cdw2 倉儲.&lt;/p&gt;
&lt;p&gt;接著, scrum-2 用戶就必須登入到 github, 然後從自己帳號下的 scrum-2/cdw2 倉儲中建立 pull request.&lt;/p&gt;
&lt;p&gt;因為 scrum-2 要將 gh-pages 分支的資料版本, 以拉回請求 (pull request) 的方式送到 2015fallhw/cdw2 倉儲, 而這項請求, 必須由 ag100 的組長來進行檢查並且設法完成版本的衝突解決與合併.&lt;/p&gt;
&lt;p&gt;建立 pull request 時, scrum-2 必須確定基底互刻 (base fork) 為 2015fallhw/cdw2 倉儲中的 gh-pages 分支, 而標頭互刻 (head fork) 則為 scrum-2/cdw2 倉儲中的 gh-pages 分支, 其間 Github 還特別顯示 "Can't automatically merge", 表示這個拉回請求無法自動合併, scrum-1 組長必須要採用手動合併.&lt;/p&gt;
&lt;p&gt;接著 scrum-2 組員按下 Create pull request 按鈕, 並在 comment 表單中寫下此一拉回請求的改版要點, 完成後的請求連結為 &lt;a href="https://github.com/2015fallhw/cdw2/pull/169"&gt;https://github.com/2015fallhw/cdw2/pull/169&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;接下來的 pull request 審核與合併工作就落在 scrum-1 組長的身上, scrum-1 登入 Github 後, 進入 2015fallhw/cdw2 倉儲. 點下 &lt;a href="https://github.com/2015fallhw/cdw2/pull/169"&gt;https://github.com/2015fallhw/cdw2/pull/169&lt;/a&gt; pull request.&lt;/p&gt;
&lt;p&gt;這時可以看到 "This branch has conflicts that must be resolved", 表示 scrum-1 必須手動處理衝突與合併.&lt;/p&gt;
&lt;p&gt;假如 scrum-1 近端沒有 &lt;a href="https://github.com/2015fallhw/cdw2.git"&gt;https://github.com/2015fallhw/cdw2.git&lt;/a&gt; 倉儲的版本資料, 必須要利用 git clone 複製到本地端, 然後確定分支指在 gh-pages 分支上.&lt;/p&gt;
&lt;p&gt;Github 針對此一流程, 建立的基本步驟如下:&lt;/p&gt;
&lt;pre&gt;
Step 1: From your project repository, check out a new branch and test the changes.

git checkout -b scrum-2-gh-pages gh-pages
git pull https://github.com/scrum-2/cdw2.git gh-pages

Step 2: Merge the changes and update on GitHub.

git checkout gh-pages
git merge --no-ff scrum-2-gh-pages
git push origin gh-pages
&lt;/pre&gt;

&lt;p&gt;有關 git checkout 指令, 使用 -b 表示要利用 git branch 建立新分支 scrum-2-gh-pages, 同時切換到該分支, 至於 start-point 指的是該新建立的分支, 其對應分支起點為 gh-pages. 假如 scrum-1 近端的倉儲資料已經在之前使用 -b 建立過 scrum-2-gh-pages 分支, 且 start-point 設為 gh-pages 分支, 則必須改用 git checkout  scrum-2-gh-pages&lt;/p&gt;
&lt;p&gt;接著執行 git pull https://github.com/scrum-2/cdw2.git gh-pages, 拉回 scrum-2/cdw2 的 gh-pages 分支版本資料, 這時 users/s2a/g100/scrum2.leo 因為無法自動合併而無法從 Leo Editor 開啟, 必須用純文字編輯器打開後解決衝突.&lt;/p&gt;
&lt;p&gt;開啟 scrum2.leo 後, 看到的第1段衝突為:&lt;/p&gt;
&lt;pre&gt;
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
&lt;v t="amd.20160329174139.1"&gt;&lt;vh&gt;@clean scrum2-20160330.md&lt;/vh&gt;&lt;/v&gt;
&lt;v t="amd.20160330205248.1"&gt;&lt;vh&gt;@clean scrum2-20160330-1.md&lt;/vh&gt;&lt;/v&gt;
=======
&lt;v t="amd.20160329174139.1"&gt;&lt;vh&gt;@clean scrum2-20160330-2.md&lt;/vh&gt;&lt;/v&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 61b5812abdc9cdb907dbd1b865194e5bdb70bbdf
&lt;/pre&gt;

&lt;p&gt;表示 scrum-1 近端版本有 @clean scrum2-20160330.md 與 @clean scrum2-20160330-1.md 等兩個節點, 而 scrum-2 pull request 的版本則有 @clean scrum2-20160330-2.md 節點, 這裡必須保留這3個分別建立網誌文章的 .md 檔案, 因此刪除衝突標示符號後即可.&lt;/p&gt;
&lt;p&gt;過程中 scrum-1 組長可以根據 content 目錄中的組員對應 .md 檔案來解決 .leo 檔案中的衝突, 同時各組員也必須經常利用反向的 pull request, 儘量自行在 task 1 任務執行期間跟上 2015fallhw/cdw2 的最新版本, 才能減少組長審查組員 pull request 的版本差異.&lt;/p&gt;
&lt;p&gt;完成 scrum-2 pull request  版本的合併後, scrum-1 必須利用近端與遠端按鈕建立 Pelican 網誌後, 進行近端的版本提交, git add -A 與 git commit -m "提交訊息", 之後繼續執行 scrum-2-gh-pages 與 gh-pages 分支版本的合併.&lt;/p&gt;
&lt;p&gt;先利用 git checkout gh-pages 將分支轉為 gh-pages, 然後執行的指令為 git merge --no-ff scrum-2-gh-pages, 其中的 --no-ff 表示合併時不使用快進 (fast-forward) 模式. 而是考量互刻 (fork) 分支後, 2015fallhw/cdw2 的版本可能已經被其他協同組員改版, 必須將這些版本資料納入合併.&lt;/p&gt;
&lt;p&gt;接著必須要再利用近端與遠端按鈕進行 post 目錄中網誌資料的轉檔後, 就可以提交推送到遠端的 cdw2 倉儲 gh-pages 分支.&lt;/p&gt;
&lt;p&gt;步驟為:&lt;/p&gt;
&lt;p&gt;git add -A&lt;/p&gt;
&lt;p&gt;git commit -m "提交訊息"&lt;/p&gt;
&lt;p&gt;git push origin gh-pages&lt;/p&gt;
&lt;p&gt;最後, 當組長 scrum-1 完成  scrum-2 pull request 的合併後, scrum-2 就可以利用反向 pull request 更新 scrum-2/cdw2 gh-pages 分支上的版本資料.&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="協同產品設計實習"></category></entry><entry><title>任務一 2D 協同繪圖</title><link href="http://chiamingyen.github.io/kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html" rel="alternate"></link><updated>2016-03-30T00:44:15+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-30:kmolab/blog/ren-wu-yi-2d-xie-tong-hui-tu.html</id><summary type="html">&lt;p&gt;假設 2a CD 課程中有第 100 組, 由四位組員: scrum-1, scrum-2,  scrum-3 與 scrum-4 所組成, 且 scrum-1 為組長. 在協同產品設計課程中, scrum-1 將會是 cdw2 倉儲的 collaborator, 可以直接將本地端的 CDW2 倉儲版本資料提交推送到遠端, 其餘三人則必須透過 Pull Requests 進行協同.&lt;/p&gt;


&lt;p&gt;scrum-1 可以直接 git clone cdw2, 然後改版提交推送, 其他組員參與協同的方法都是先根據 &lt;a href="http://chiamingyen.github.io/kmolab/blog/xie-tong-chan-pin-she-ji-shi-xi-de-wang-ji-2d-xie-tong-hui-tu.html"&gt;http://chiamingyen.github.io/kmolab/blog/xie-tong-chan-pin-she-ji-shi-xi-de-wang-ji-2d-xie-tong-hui-tu.html&lt;/a&gt; 中的說明. 登入 Github 後, 以瀏覽器連結到 &lt;a href="https://github.com/2015fallhw/cdw2"&gt;https://github.com/2015fallhw/cdw2&lt;/a&gt; 後, 按一下右上方的  Fork 鍵後, 就可建立與原始倉儲互有關聯的"互刻"內容.&lt;/p&gt;
&lt;p&gt;scrum-1 git clone cdw2 倉儲後, 可以在本地端就工作目錄中的內容進行處理. 由於現在 cdw2 倉儲中的 master 與 gh-pages 已經徹底分離, master 分支主要用來執行 Python3 wsgi 程式, 而 gh-pages 分支則要協同各組回報的資料, 以 Github Pages 的網頁呈現.&lt;/p&gt;
&lt;p&gt;在 cdw2 master 分支上的工作:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;git clone cdw2 倉儲, 以 git branch 指令確定工作目錄中的資料為 master 分支.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 users/s2a/g100 分組目錄中, 建立 scrum1.leo, 主要目的建立 scrum1_task1.py 然後在近端測試後, 要利用 git remote add 建立同步設定後, 再推送到各分組自行建立的 OpenShift 應用程式倉儲,  然後再將結果回報到 cdw2 的 gh-pages 分支的 Pelican 網站.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;首先是在 scrum1_task1.py 程式中, 利用 Flask 的 Blueprint() 建立藍圖, 且名稱為 scrum1_task1, 這個變數名稱, 就是後面用來指定路徑 decorator 用的藍圖案例, 從這裡可以知道隨後測試可以 /ag100/scrum1_task1 呼叫 task1() 函式傳回的繪圖程式.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接著則是在 myflaskapp.py 檔案中, 利用 import users.s2a.g100.scrum1_task1 導入 scrum1_task1.py 程式內容, 且在 flask app 註冊的時候, 利用 app.register_blueprint(users.s2a.g100.scrum1_task1.scrum1_task1) 註冊 scrum1_task1.py 程式中的 scrum1_task1 藍圖變數.&lt;/p&gt;
&lt;p&gt;完整的程式碼: &lt;a href="https://github.com/2015fallhw/cdw2/blob/efc0bf77c01c2d4218f16fb0603bb5ed27639e1b/users/s2a/g100/scrum1_task1.py"&gt;https://github.com/2015fallhw/cdw2/blob/efc0bf77c01c2d4218f16fb0603bb5ed27639e1b/users/s2a/g100/scrum1_task1.py&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;完成上述的 /ag100/scrum1_task1 繪圖的本地端測試後, 可以正常顯示繪圖內容後, 將 master 分支的版本提交推送到 https://github.com/2015fallhw/cdw2.git 倉儲後, 接著就利用組長所登記的 OpenShift python3 應用程式, 將原始碼指到 https://github.com/2015fallhw/cdw2.git 後就可以完成 ag100 組所對應的 &lt;a href="http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1"&gt;http://cdw2-ag100.rhcloud.com/ag100/scrum1_task1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;最後,為了將 ag100 組員 scrum-1 所完成的繪圖結果回報到 https://github.com/2015fallhw/cdw2.git 的 gh-pages 網頁, 因此將本地端的 cdw2 切換到 gh-pages 分支, 並且複製 users 目錄中的 template.leo 檔案, 並且建立 s2a/g100 目錄, 再將 template.leo 存為 scrum1.leo 後, 進行修改.&lt;/p&gt;
&lt;p&gt;scrum1.leo 是 ag100 組員 scrum-1 所對應的 .leo 檔案, 目的是要建立 content 目錄中的 .md 檔案, 並在本地端用近端按鈕將 .md 轉為 Pelican 網誌, 進行檢視後, 然後再利用遠端按鈕將資料轉為遠端專用格式, 以提交推送到 cdw2 倉儲的 gh-pages 分支.&lt;/p&gt;
&lt;p&gt;scrum1.leo 位於 users/s2a/g100 目錄中, 編輯 .md 檔案時必須特別注意:&lt;/p&gt;
&lt;p&gt;Title: scrum1-回報 ag100 scrum1 初步繪圖主機與連結&lt;/p&gt;
&lt;p&gt;必須加入 scrum1 個人學號, 以免多組員使用相同文章標題後, Pelican 無法轉成 html, 因為設定中是以 Title 名稱來決定最後 .html 的檔名.&lt;/p&gt;
&lt;p&gt;其次則是要在 Category: 中標示自己的組別, 這裡的標題為 ag100, 表示 scrum-1 組員為甲班 g100 的成員.&lt;/p&gt;
&lt;p&gt;寫完文章後, 先將滑鼠停在 @button local pelican 節點, 然後按上方的 local-pelican 按鈕, 完成轉換為 html 後, 打開 cdw2 倉儲中 gh-pages 分支中的 index.html 檢查是否正確轉檔, 若是, 則再將滑鼠停在 @button gh-pages pelican 節點, 再按上方的 gh-pages-pelican 按鈕後, 將版本資料提交推送到 cdw2 的 gh-pages 分支中.&lt;/p&gt;
&lt;p&gt;因為這裡要推送到 gh-pages 分支, 若以指令推送, 必須使用 git push origin gh-pages, 若是需要拉回 gh-pages 的分支版本, 則使用 git pull origin gh-pages 指令.&lt;/p&gt;
&lt;p&gt;當 scrum-1 用戶完成 cdw2 gh-pages 分支版次資料後, 所新增的網誌文章為: &lt;a href="http://2015fallhw.github.io/cdw2/post/scrum1-hui-bao-ag100-scrum1-chu-bu-hui-tu-zhu-ji-yu-lian-jie.html"&gt;http://2015fallhw.github.io/cdw2/post/scrum1-hui-bao-ag100-scrum1-chu-bu-hui-tu-zhu-ji-yu-lian-jie.html&lt;/a&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="協同產品設計實習"></category></entry><entry><title>協同流程的規劃與實踐</title><link href="http://chiamingyen.github.io/kmolab/blog/xie-tong-liu-cheng-de-gui-hua-yu-shi-jian.html" rel="alternate"></link><updated>2016-03-23T21:24:55+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-23:kmolab/blog/xie-tong-liu-cheng-de-gui-hua-yu-shi-jian.html</id><summary type="html">&lt;p&gt;隨著分散式版次管理系統技術的不斷進展, 各種軟硬體協同開發流程的規劃也跟著日漸多元, 當然, 從機械設計的角度來看, &lt;a href="https://www.onshape.com"&gt;Onshape&lt;/a&gt; 的推出, 或許可以讓過去許多無緣一窺大型制式 PDM 或 PLM 系統的學員, 透過免費帳號的使用, 稍微體會一個版本多方推升改版所帶來的便利.&lt;/p&gt;


&lt;p&gt;而在這個課程中, 我們則透過 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 協同倉儲的運作, 從學員分組、指定組長、安排座位、各組組長設為倉儲直接協同者 (collaborator)、其他組員以 Pull Request 參與協同, 一直到本地端 &lt;a href="http://solvespace.com/"&gt;Solvespace&lt;/a&gt; 的零件輪廓繪製, 進而透過 SVG (Scalable Vector Graphics) 格式將零件斷面輪廓搬上全球資訊網, 然後以各組協同完成網際 2D 組件繪圖告一段落.&lt;/p&gt;
&lt;p&gt;其中的程式皆以 Python3 完成, 工具組則包含 Leo Editor, Github 倉儲, Git client, Github Pages, Flask 框架, WSGI 協定, OpenShift 雲端平台等.&lt;/p&gt;
&lt;p&gt;以雲端上的學員分組到安排座位, 初步的說明在 &lt;a href="wcm-dian-nao-jiao-shi-fen-zu-yan-jiu.html"&gt;電腦教室分組研究&lt;/a&gt;, 而當各組組長確立後, 則必須要利用 &lt;a href="https://developer.github.com/v3/"&gt;Github API&lt;/a&gt; 自動建立對應協同倉儲, 並且自動按照協同產品設計期程與內容規劃, 將各組組長設為各協同倉儲的直接協同者 (collaborator), 以便審核該組組員透過 Pull Request 送出的協同內容版次合併事宜.&lt;/p&gt;
&lt;p&gt;針對此一自動建立 Github 倉儲與納組長為直接協同者的流程, 我們將利用 &lt;a href="https://github.com/sigmavirus24/github3.py"&gt;https://github.com/sigmavirus24/github3.py&lt;/a&gt; 與 &lt;a href="https://github.com/mitsuhiko/flask"&gt;https://github.com/mitsuhiko/flask&lt;/a&gt;, 在 &lt;a href="https://www.openshift.com/"&gt;OpenShift&lt;/a&gt; 平台上完成. &lt;/p&gt;
&lt;h2&gt;讀取學員分組基本資料&lt;/h2&gt;
&lt;pre class="brush: python;"&gt;
content = '''40323101,40323102,40323103,40323108,40323124,,
40323109,40323130,40323135,40323136,40323138,40323144,
40323111,40323117,40323118,40323119,40323120,40323122,
40323110,40323113,40323116,40323121,40323151,,
40323112,40323133,40323147,40323152,40323155,40323156,
40323105,40323106,40323107,40323146,40223153,40023139,
40123119,40123141,40123149,40123216,40123227,40123255,40023234
40323125,40323126,40323132,40323149,40323150,40323153,
40323123,40323131,40323137,40323143,40323145,40323154,
40323127,40323128,40323139,40323141,,,
'''
result = []

# splitlines() 方法會將每一行內容作為字串後傳回分割行資料數列
for line in content.splitlines():
    try:
        g.es(line.split(","))
    except:
        print(line.split(","))
    #各行字串再以逗點隔開成為各組學號數列, 再一一放入 result 數列中
    result.append(line.split(","))

try:
    g.es(result)
except:
    print(result)
&lt;/pre&gt;

&lt;h2&gt;組內學號排序, 以及組間之組長學號排序&lt;/h2&gt;
&lt;pre class="brush: python;"&gt;
# 依照總組數, 逐一取出各組學號數列進行排序
for i in range(len(result)):
    #學號遞增排序
    group_list = sorted(list(filter(None, result[i])))
    #學號遞減排序
    group_list = sorted(list(filter(None, result[i])), reverse=True)
    group_sorted.append(group_list)
#根據各組第一位組員學號, 進行各組間排序, 以訂出組序
final_result = sorted(group_sorted)
#學號遞減排序
#final_result = sorted(group_sorted, reverse=True)
&lt;/pre&gt;

&lt;p&gt;當確定各組組長以及各組的組序後, 就可以利用下列流程, 自動建立對應倉儲, 並將組長納為 collaborator:&lt;/p&gt;
&lt;pre class="brush: python;"&gt;
#導入 github3.py
import github3
# account 為要加為 collaborator 的用戶名稱
account = "github_account_to_be_added_as_collaborator"
# user_account 為 repository 倉儲擁有者的帳號
user_account = "your_github_account"
repository = "your_repository"
#url = "https://github.com/your_github_account/your_repository.git"
# 登入系統
g = github3.login("your_github_account", "your_github_password")
# 以下則新增協同者
#若新增 collaborator 成功傳回 True 否則傳回 False
result = g.repository(user_account, repository).add_collaborator(account):
#移除 collaborator
#result = g.repository(user_account, repository).remove_collaborator(account):
&lt;/pre&gt;

&lt;p&gt;建立新倉儲(&lt;a href="http://github3py.readthedocs.org/en/latest/examples/github.html#creating-a-new-repository"&gt;參考&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="brush: python;"&gt;
repo = {}
keys = ['name', 'description', 'homepage', 'private', 'has_issues',
    'has_wiki', 'has_downloads']

for key in keys:
    try:
        repo[key] = raw_input(key + ': ')
    except KeyboardInterrupt:
        pass

r = None
if repo.get('name'):
    r = g.create_repo(repo.pop('name'), **repo)

if r:
    print("Created {0} successfully.".format(r.name))
&lt;/pre&gt;

&lt;p&gt;最後則配合 &lt;a href="http://cadlab.mde.tw"&gt;http://cadlab.mde.tw&lt;/a&gt; 的電腦教室配置, 依據已經完成分組的名單, 以依組序分別取出單一組員, 排入各排座位, 以分散各組組員, 令其儘量透過網路與系統資料進行協同產品設計.&lt;/p&gt;
&lt;p&gt;分組與列出座位表的程式如下:&lt;/p&gt;
&lt;pre class="brush: python;"&gt;
@app.route('/optionaction', methods=['POST'])
def optionaction():
    # 最後傳回的字串為 out_string
    out_string = ""
    # 程式內需要暫時使用的 tmp_string
    tmp_string = ""
    # 傳回字串中, 用來說明排序原則的 desc_string
    desc_string = ""
    result = []
    group_sorted = []
    num_of_stud = 0
    # 每組至多 7 人
    max_num_in_one_group = 7
    # 電腦教室配置, 共有 9 排
    total_column = 9
    # 上面為相關變數的初始值設定, 以下開始取出 data_a 或 data_b 進行處理, 由 option3 傳回值決定
    if request.form["option3"]  == "2a":
        content = request.form["data_a"]
    else:
        content = request.form["data_b"]
    #result = content.splitlines()
    for line in content.splitlines():
        result.append(list(line.split(",")))
    # i 為行序
    for i in range(len(result)):
        # j 為組員序
        for j in range(len(result[i])):
            tmp_string += result[i][j] + ", "
        out_string += "第" + str(i+1) + "排資料:"+ tmp_string + "&lt;br /&gt;"
        tmp_string = ""
    for i in range(len(result)):
        # 開始進入組內排序, 根據 request.form["option1"]  的值決定遞增或遞減
        if request.form["option1"]  == "遞增":
            group_list = sorted(list(filter(None, result[i])))
        else:
            group_list = sorted(list(filter(None, result[i])), reverse=True)
        group_sorted.append(group_list)
    if request.form["option1"]  == "遞增":
        desc_string += "組內學號最小者為組長."
    else:
         desc_string += "組內學號最大者為組長."
    # 開始進入組間組長學號排序, 根據 request.form["option2"] 的值決定遞增或遞減
    if request.form["option2"]  == "遞增":
        desc_string += "各組長中學號最小者為第1組."
        final_result = sorted(group_sorted)
    else:
        desc_string += "各組長中學號最大者為第1組."
        final_result = sorted(group_sorted, reverse=True)
    out_string += "&lt;br /&gt;" + desc_string + "&lt;br /&gt;"
    # i 為行序
    for i in range(len(final_result)):
        # j 為組員序
        for j in range(len(final_result[i])):
            num_of_stud += 1
            tmp_string += final_result[i][j] + ","
        out_string += "第" + str(i+1) + "組:"+ tmp_string + "&lt;br /&gt;"
        tmp_string = ""
    #return "總共有" + str(i+) + "組"
    # group_num 為總組數
    group_num = i + 1
    # 截至這裡, 已經完成選組長, 以及定組序的工作 ,接下來要排座位, 並且印出座位表
    # 先算每班的總人數
    #return "總共有"+ str(num_of_stud) + "人"
    seat_by_column = []
    for row in range(max_num_in_one_group):
    # 每組最多 7 人
    #for row in range(7):
        # 這裡的 11 為總組數
        #for column in range(11):
        for column in range(group_num):
            # 因為各分組數列的長度並不相同, 但是最長的有 7 位組員, 因此若無法取得的資料 (因為索引超值), 就補上空字串
            try:
                seat_by_column.append(final_result[column][row])
            except:
                seat_by_column.append("")
    # seat_by_column 為去除空白字串前的座位數列
    # 然後利用 filter(None, seat_by_column) 去除空白字串, 就可以得到以 column 為主的座位排序
    seat_by_column = list(filter(None, seat_by_column))
    # 然後每 N 個取為 1 排, 即可得到以排為主的座位序列, 而 N 則視全班人數除以 9, 也就是 total_column 進位決定, 因為共有 9 排
    N = math.ceil(num_of_stud/total_column)
    # for debug
    #return str(num_of_stud) + ":" + str(total_column) + ":" + str(N)
    column_list = [seat_by_column[n:n+N] for n in range(0, len(seat_by_column), N)]
    # 列出每 N 個組員一排的數列 column_list
    # 接下來要納入以排為主的座位
    # 根據 column_list, 建立一個 dictionary, 其中學號為 index, 座位號為對應值
    seat_dict = {}
    for column in range(len(column_list)):
        for i in range(N):
            try:
                seat_dict.update({column_list[column][i]: (column, i)})
            except:
                seat_dict.update({"": ""})

    # 開始準備用順序列出學員座號
    # 根據學號, 排序 dictionary 的方法
    import operator
    seat_dict_sort = sorted(seat_dict.items(), key = operator.itemgetter(0), reverse = False)
    # 依照學號順序, 列出座位表
    out_string += "&lt;br /&gt;按照學號次序列出座位表:&lt;br /&gt;&lt;br /&gt;"
    for i in range(1, len(seat_dict_sort)):
        out_string +=  str(i) + ":"+ str(seat_dict_sort[i]) + "&lt;br /&gt;"
    # 結束準備用順序列出學員座號
    # dont know why .reverse() did not work, 只有 [::-1] 可以 reverse list elements
    #g.es(column_list[::-1])

    # 因為經由 zip 逐一重新 transpose 的列資料, 必須配合最大 (也就是總共有 7 列, 也就是 N 的值) 列數補上空白字串 (也就是空位)
    # 所以不能使用 zip, 而必須導入 zip_longest 模組方法
    from itertools import zip_longest
    final_seat = list(zip_longest(*column_list[::-1], fillvalue=""))
    # 列出最後的座位表
    #g.es(final_seat)
    # 最後轉成 html table 標註格式
    out_string += "&lt;br /&gt; &lt;br /&gt;"
    out_string += "&lt;table border='1' width='100%'&gt;"
    out_string += "&lt;tr&gt;&lt;td colspan='9' style='text-align:center'&gt;講台&lt;/td&gt;&lt;/tr&gt;"
    for row in range(len(final_seat)):
        out_string += "&lt;tr&gt;"
        # 因為每一 row 有 9, 也就是 total_column 個位子
        for i in range(total_column):
            try:
                if i%2 != 0:
                    out_string += "&lt;td style='text-align:center'  bgcolor='#FFD78C' height='30'&gt;" + str(final_seat[row][i]) + "&lt;/td&gt;"
                else:
                    out_string += "&lt;td style='text-align:center' height='30'&gt;" + str(final_seat[row][i]) + "&lt;/td&gt;"
            except:
                out_string += "&lt;td&gt;&amp;nbsp;&lt;/td&gt;"
        out_string += "&lt;/tr&gt;"
    out_string += "&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;"
    return out_string
    # 等運算或資料處理結束後, 再將相關值送到對應的 template 進行資料的展示
    #return render_template('optionaction.html', option_list1=option_list1, option_list2=option_list2)
&lt;/pre&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category><category term="協同產品設計實習"></category></entry><entry><title>SVG 檔案解讀</title><link href="http://chiamingyen.github.io/kmolab/blog/svg-dang-an-jie-du.html" rel="alternate"></link><updated>2016-03-21T22:06:23+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-21:kmolab/blog/svg-dang-an-jie-du.html</id><summary type="html">&lt;p&gt;利用 Python 的 xml 模組, 可以讀出一個 SVG 檔案的尺寸與路徑字串.&lt;/p&gt;


&lt;pre class="brush: python;"&gt;
from xml.dom import minidom

svg_file = "cd_task1_chain_ss.svg"

# 利用 minidom 解讀 svg 檔案
doc = minidom.parse(svg_file)

# 設法取得 svg 檔案的長與寬, 並且去除 mm 單位字串
width = float([path.getAttribute('width') for path
             in doc.getElementsByTagName('svg')][0].replace("mm", ""))

height = float([path.getAttribute('height') for path
              in doc.getElementsByTagName('svg')][0].replace("mm", ""))

# 取得 svg 的路徑字串
path_strings = [path.getAttribute('d') for path
                in doc.getElementsByTagName('path')][0]

doc.unlink()

print("width:", width, "\nheight:", height, "\npath:", path_strings)
&lt;/pre&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category><category term="協同產品設計實習"></category></entry><entry><title>Cango 全球資訊網繪圖程式庫</title><link href="http://chiamingyen.github.io/kmolab/blog/cango-quan-qiu-zi-xun-wang-hui-tu-cheng-shi-ku.html" rel="alternate"></link><updated>2016-03-16T21:21:39+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-16:kmolab/blog/cango-quan-qiu-zi-xun-wang-hui-tu-cheng-shi-ku.html</id><summary type="html">&lt;p&gt;Cango 是一套 Canvas Graphics Library, 以 Javascript 編寫, 為了將它導入機械設計產品開發流程, 透過 Brython 程式呼叫.&lt;/p&gt;


&lt;p&gt;以 Solvespace 繪製輪廓圖: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/cd_task1_chain_profile.slvs"&gt;http://chiamingyen.github.io/kmolab_data/files/cd_task1_chain_profile.slvs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從 Solvespace 輪廓圖長出 3D 零件後, 以 export 2D section SVG 圖檔: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/cd_task1_chain_ss.svg"&gt;http://chiamingyen.github.io/kmolab_data/files/cd_task1_chain_ss.svg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;從 cd_task1_chain_ss.svg 圖檔, 可以得知斷面圖檔寬度為 26.696mm, 而高度為 47.906mm, 且 SVG 各點的座標原點位於圖檔的左下角落點. 從此資訊就可以算出 svgToCgoSVG 函式中的座標 offset 值為 (26.696/2, 47.906/2+10) (因為上下兩個圓弧的圓心距離 20 mm), 而 Solvespace 轉出 SVG 時將上下圓弧分別截為三段表示. 下圖中綠色輪廓繪圖數據即來自 Solvespace.&lt;/p&gt;
&lt;script type="text/javascript" src="http://brython.info/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="http://cptocadp-2015fallhw.rhcloud.com/static/Cango-8v03.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="http://cptocadp-2015fallhw.rhcloud.com/static/Cango2D-6v13.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="http://cptocadp-2015fallhw.rhcloud.com/static/CangoAxes-1v33.js"&gt;&lt;/script&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="plotarea" width="800" height="800"&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
from javascript import JSConstructor
from browser import window
import math

cango = JSConstructor(window.Cango)
cobj = JSConstructor(window.Cobj)
shapedefs = window.shapeDefs
obj2d = JSConstructor(window.Obj2D)
cgo = cango("plotarea")

#cgo.setWorldCoords(-300, -300, 600, 600)
cgo.setWorldCoords(-200, -200, 400, 400) 

#畫座標軸線

cgo.drawAxes(0, 190, 0, 190, {
    "strokeColor":"#aaaaaa",
    "fillColor": "#aaaaaa",
    "xTickInterval": 10,
    "xLabelInterval": 20,
    "yTickInterval": 10,
    "yLabelInterval": 20})

deg = math.pi/180

#選擇長弧, 且向內畫弧
def chain1(x, y, rx, ry, rot, color, border, linewidth):
    # 旋轉必須要針對相對中心 rot not working yet
    chamber = "M -6.8397, -1.4894                      A 7, 7, 0, 1, 0, 6.8397, -1.4894                      A 40, 40, 0, 0, 1, 6.8397, -18.511                      A 7, 7, 0, 1, 0, -6.8397, -18.511                      A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"
    cgoChamber = window.svgToCgoSVG(chamber)
    cmbr = cobj(cgoChamber, "SHAPE", {
            "fillColor": color,
            "border": border,
            "strokeColor": "black",
            "lineWidth": linewidth })
    # 尺寸放大兩倍
    cgo.render(cmbr, x, y, 2, rot)
    cgo.drawText("1-長向內", x, y-10, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

# 選擇短弧, 且向內畫弧
def chain2(x, y, rx, ry, rot, color, border, linewidth):
    # 旋轉必須要針對相對中心 rot not working yet
    chamber = "M -6.8397, -1.4894                      A 7, 7, 0, 0, 0, 6.8397, -1.4894                      A 40, 40, 0, 0, 1, 6.8397, -18.511                      A 7, 7, 0, 1, 0, -6.8397, -18.511                      A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"
    cgoChamber = window.svgToCgoSVG(chamber)
    cmbr = cobj(cgoChamber, "SHAPE", {
            "fillColor": color,
            "border": border,
            "strokeColor": "black",
            "lineWidth": linewidth })
    # 尺寸放大兩倍
    cgo.render(cmbr, x, y, 2, rot)
    cgo.drawText("2-短向內", x, y-10, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

#選擇長弧, 且向外畫弧
def chain3(x, y, rx, ry, rot, color, border, linewidth):
    # 旋轉必須要針對相對中心 rot not working yet
    chamber = "M -6.8397, -1.4894                      A 7, 7, 0, 1, 1, 6.8397, -1.4894                      A 40, 40, 0, 0, 1, 6.8397, -18.511                      A 7, 7, 0, 1, 0, -6.8397, -18.511                      A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"
    cgoChamber = window.svgToCgoSVG(chamber)
    cmbr = cobj(cgoChamber, "SHAPE", {
            "fillColor": color,
            "border": border,
            "strokeColor": "black",
            "lineWidth": linewidth })
    # 尺寸放大兩倍
    cgo.render(cmbr, x, y, 2, rot)
    cgo.drawText("3-長向外", x, y-30, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

#選擇短弧, 且向外畫弧
def chain4(x, y, rx, ry, rot, color, border, linewidth):
    # 旋轉必須要針對相對中心 rot not working yet
    chamber = "M -6.8397, -1.4894                      A 7, 7, 0, 0, 1, 6.8397, -1.4894                      A 40, 40, 0, 0, 1, 6.8397, -18.511                      A 7, 7, 0, 1, 0, -6.8397, -18.511                      A 40, 40, 0, 0, 1, -6.8397, -1.4894 z"
    cgoChamber = window.svgToCgoSVG(chamber)
    cmbr = cobj(cgoChamber, "SHAPE", {
            "fillColor": color,
            "border": border,
            "strokeColor": "black",
            "lineWidth": linewidth })
    # 尺寸放大兩倍
    cgo.render(cmbr, x, y, 2, rot)
    cgo.drawText("4-短向外", x, y-30, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

#利用 boundary 界定出繪圖的範圍
def boundary():
    chamber = "M -200, -200 L 200, -200 L 200, 200 L -200, 200z"
    cgoChamber = window.svgToCgoSVG(chamber)
    cmbr = cobj(cgoChamber, "PATH", {
            "fillColor": "black",
            "border": True,
            "strokeColor": "black",
            "lineWidth": 5 })
    # 尺寸放大兩倍
    cgo.render(cmbr, 0, 0, 1, 0)
    #cgo.drawText("2-短向內", x, y-10, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

def drawSpiral():
    chamber = "M 289.16,447.14 \
                 C 233.33,399.03 267.47,290.34 364.53,265.28 \
                   408.88,269.91 448.14,282.58 483.22,303.79 \
                   391.79,287.12 292.99,369.50 331.90,451.11 \
                   318.79,447.43 302.35,446.61 289.16,447.14 z"
    cgoChamber = window.svgToCgoSVG(chamber, -287, -536)
    cmbr = cobj(cgoChamber, "SHAPE", {
        "fillColor":"lightyellow",
        "strokeColor":"tan",
        "lineWidthWC":4,
        "border":True })
    #cgo.drawShape(shapedefs.circle(8),0 ,0 , {"fillColor":"tan"})
    cmbr.scale(0.5)
    scl = 1
    for i in range(50):
        scl = scl/(1.08)
        cgo.render(cmbr, 0, 0, scl, -i*24.5)

# 從 solvespace 轉出的 SVG (必須長出實體, 然後選擇斷面後, 以 export 2D section 轉出 SVG) 
# width='26.696mm' height='47.906mm', 且原點在左下角落
def solvespace(x, y):
    centerx = 26.696/2
    centery = 47.906/2+10
    chamber = "M16.772 7.656 \
            A7.000,7.000 0 0,1 8.924,7.656 \
            A7.000,7.000 0 0,1 6.008,14.942 \
            A40.000,40.000 0 0,1 6.008,31.964 \
            A7.000,7.000 0 0,0 8.924,39.250 \
            A7.000,7.000 0 0,0 16.772,39.250 \
            A7.000,7.000 0 0,0 19.688,31.964 \
            A40.000,40.000 0 0,1 19.688,14.942 \
            A7.000,7.000 0 0,0 16.772,7.656z"
    # 以其中一個相切點作為關鍵原點
    # -centerx 為 x 座標的 offset 值, 也就是新原點位於 (centerx, centery)
    cgoChamber = window.svgToCgoSVG(chamber, -centerx, -centery)
    cmbr = cobj(cgoChamber, "SHAPE", {
            "fillColor": "green",
            "border": True,
            "strokeColor": "black",
            "lineWidth": 4 })
    # 尺寸放大兩倍
    cgo.render(cmbr, x, y, 2, 0)
    cgo.drawText("從 ss 轉出", x, y-30, {"fontSize":10, "fontWeight": 1200, "lorg":5 })

boundary()
drawSpiral()
yellow = "#f4c20d"
white = "#ffffff"
chain1(0, 0, 0, 0, 0, white, True, 4)
chain2(35, 0, 0, 0, 0, white, True, 4)
chain3(70, 0, 0, 0, 0, white, True, 4)
chain4(105, 0, 0, 0, 0, white, True, 4)
solvespace(140, 0)
&lt;/script&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category><category term="協同產品設計實習"></category></entry><entry><title>協同產品設計實習的網際 2D 協同繪圖</title><link href="http://chiamingyen.github.io/kmolab/blog/xie-tong-chan-pin-she-ji-shi-xi-de-wang-ji-2d-xie-tong-hui-tu.html" rel="alternate"></link><updated>2016-03-15T20:19:13+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-15:kmolab/blog/xie-tong-chan-pin-she-ji-shi-xi-de-wang-ji-2d-xie-tong-hui-tu.html</id><summary type="html">&lt;p&gt;在這個範例中, 所有參與協同的機械設計課程學員, 透過 Github 的 pull request 機制進行協同繪圖程式開發, 而各組組長則以 collaborator 的角色負責審核各組員送出的 pull requests, 本繪圖任務中的基本單 2D 繪圖單元, 是由 4 個彼此相切的圓弧所組成, 各組必須根據幾何約束條件求出各相切點的座標後, 使用指定的網際繪圖程式庫, 著手結合各組員, 在一致的內容格式規劃下, 完成所要求的 2D 組件繪圖.&lt;/p&gt;


&lt;p&gt;任務倉儲: &lt;a href="https://github.com/2015fallhw/cdw2"&gt;https://github.com/2015fallhw/cdw2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;兩位虛擬組員, 分別是位於 s2a 中的 &lt;a href="https://github.com/2015fallhw/cdw2/tree/6ebf1e29c7379eb8c86eeae61ffea9fe1d79b098/users/s2a/g100"&gt;g100&lt;/a&gt;, 以及位於 s2b 中的 &lt;a href="https://github.com/2015fallhw/cdw2/tree/6ebf1e29c7379eb8c86eeae61ffea9fe1d79b098/users/s2b/g99"&gt;g99&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;在 cdw2 倉儲 1.1 版本中 &lt;a href="https://github.com/2015fallhw/cdw2/releases"&gt;https://github.com/2015fallhw/cdw2/releases&lt;/a&gt; 已經完成 &lt;a href="http://cdw2-ladisai.rhcloud.com/ag100/task2"&gt;http://cdw2-ladisai.rhcloud.com/ag100/task2&lt;/a&gt; 的範例繪圖.&lt;/p&gt;
&lt;p&gt;而此一範例繪圖的程式碼來自 &lt;a href="https://github.com/2015fallhw/cdw2/blob/6ebf1e29c7379eb8c86eeae61ffea9fe1d79b098/users/s2b/g99/task0.py"&gt;s2b g99 的 task0.py&lt;/a&gt;, 且 Github 的倉儲資料以 git remote add 與 OpenShift 平台上的雲端應用程式倉儲進行同步.&lt;/p&gt;
&lt;p&gt;Task1 任務:&lt;/p&gt;
&lt;p&gt;請各組利用上述協同繪圖所提供的鏈條元件輪廓, 完成下列字母排列方式中的 ABCD 4個字母繪圖, 且每一位組員在各字母中必須至少繪製一小截鏈條, 各組所完成的規劃過程與結果, 則必須在 cdw2 倉儲對應的 &lt;a href="http://2015fallhw.github.io/cdw2/"&gt;http://2015fallhw.github.io/cdw2/&lt;/a&gt; Github Pages 網頁中完成.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bike_chain_1.jpg" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bike_chain_2.jpg" width="800" /&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category><category term="協同產品設計實習"></category></entry><entry><title>WCM 電腦教室分組研究</title><link href="http://chiamingyen.github.io/kmolab/blog/wcm-dian-nao-jiao-shi-fen-zu-yan-jiu.html" rel="alternate"></link><updated>2016-03-13T12:24:53+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-13:kmolab/blog/wcm-dian-nao-jiao-shi-fen-zu-yan-jiu.html</id><summary type="html">&lt;p&gt;在網際內容管理的課程中, 有一個針對電腦教室實際的配置, 讓學員自行籌組, 然後再依據各組組員的學號排序選出組長後, 再根據各組長的學號排序決定組序, 這裡希望採用 Flask 網際框架, 並且將 Github 倉儲中的程式與 OpenShift 上的應用程式同步, 以便讓機械設計學員體會之後如何應用類似的網際流程來提升產品開發的效能.&lt;/p&gt;


&lt;p&gt;在網際內容管理的&lt;a href="https://github.com/2015fallhw/2016springwcm/wiki/%E7%B6%B2%E9%9A%9B%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%A0%94%E7%A9%B6%E4%B8%BB%E9%A1%8C"&gt;研究主題&lt;/a&gt;中, 列出與全球資訊網應用相關的軟體與硬體內容管理, 其中透過全球資訊網應用程式, 能夠讓使用者:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接利用瀏覽器輸入基本資料&lt;/li&gt;
&lt;li&gt;讓使用者選擇處理基本資料的方法&lt;/li&gt;
&lt;li&gt;利用雲端上的主機進行資訊的運算或處理&lt;/li&gt;
&lt;li&gt;處理結束後, 使用者可以在瀏覽器上檢視處理結果 ,然後再設法利用資料庫儲存這些資料, 並依照需求進行下一階段的工作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而上述處理資料的流程與許多機械設計的流程類似:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用者利用瀏覽器輸入基本的設計需求 (例如, 從機械元件設計資料庫中, 選擇以漸開線正齒輪組, 輸入傳遞功率與減速需求, 設計減速機)&lt;/li&gt;
&lt;li&gt;使用者利用網際選單, 進一步選擇設計條件 (例如, 使用者可以選擇安全係數, 某一個齒輪的齒數或材料或熱處理的方法等)&lt;/li&gt;
&lt;li&gt;網際機械設計程式根據使用者的輸入與設計要求, 選擇既定的設計運算流程, 其中包括自動查表, 自動選擇適用的配合零組件&lt;/li&gt;
&lt;li&gt;處理或運算結數後, 使用者可以直接從瀏覽器取得設計結果 (例如, 系統直接完成各零組件的參數繪圖, 使用者可以選擇零件格式下載, 進行下一步的原型列印與組裝測試)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;先看看目前這個簡單的分組程式操作畫面:&lt;/p&gt;
&lt;p&gt;使用者輸入各組自行籌組的資料, 這裡實際上採用雲端即時試算表讓所有組員同時利用瀏覽器輸入分組資料後, 轉進表單:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/simpleflask-2014openshift.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;分別選擇組內排序方法, 選出組長 ,然後再選各組間的組長排序方法 ,定出組序, 按下 Select, 即可列出分組結果:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/simpleflask-2014openshift_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;上述這個基本的 Flask 程式配置流程, 請參考 &lt;a href="http://project.mde.tw/blog/yen-wang-ji-flask-cheng-shi-jia-gou.html"&gt;http://project.mde.tw/blog/yen-wang-ji-flask-cheng-shi-jia-gou.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;有了能夠接受網際表單的 Flask 程式後, 分別將程式與 Leo Editor 專案資料送到 Github 倉儲 &lt;a href="https://github.com/2015fallhw/simpleflask"&gt;https://github.com/2015fallhw/simpleflask&lt;/a&gt;, 然後再利用本地端的 git remote add 與 OpenShift 上的雲端程式同步 &lt;a href="http://simpleflask-2014openshift.rhcloud.com/option"&gt;http://simpleflask-2014openshift.rhcloud.com/option&lt;/a&gt;, 就能夠讓使用者直接在瀏覽器執行自動分組的流程.&lt;/p&gt;
&lt;p&gt;有關這個版次的程式, 請參考 &lt;a href="https://github.com/2015fallhw/simpleflask/tree/c153e0a1d192138646be192c207541a527f91c45"&gt;https://github.com/2015fallhw/simpleflask/tree/c153e0a1d192138646be192c207541a527f91c45&lt;/a&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category></entry><entry><title>全球資訊網上的內容管理系統</title><link href="http://chiamingyen.github.io/kmolab/blog/quan-qiu-zi-xun-wang-shang-de-nei-rong-guan-li-xi-tong.html" rel="alternate"></link><updated>2016-03-12T23:16:49+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-12:kmolab/blog/quan-qiu-zi-xun-wang-shang-de-nei-rong-guan-li-xi-tong.html</id><summary type="html">&lt;p&gt;這裡要舉的例子為架構在 OpenShift 平台上的 CMSimply, 目前採用 Python3 與 Cherrypy 編寫, 使用者只要建立帳號後, 將內容管理平台的原始碼, 架構在雲端平台, 馬上就能擁有一個可儲存機械設計相關內容的網站.&lt;/p&gt;


&lt;p&gt;由於本課程的目的, 不僅要將機械設計的各式內容送到雲端上的 CMSimply, 而且還要修改 Python3 內容管理系統的程式碼, 因此必須在本地端建立 rsa 格式的 key pair.&lt;/p&gt;
&lt;p&gt;在 Windows 平台上, 可以利用 puttygen: &lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"&gt;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&lt;/a&gt; 完成, 使用步驟如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;開啟 puttygen.exe 後, 以 Generate 按鈕後, 移動滑鼠後即可完成.&lt;/li&gt;
&lt;li&gt;將 Public key 送到 OpenShift 帳號中的 settings 處.&lt;/li&gt;
&lt;li&gt;按 Conversions 功能表, 以 export OpenSSH 格式的 private key, 存到 home 目錄下的 .ssh 目錄中, 且以 id_rsa 命名檔案.&lt;/li&gt;
&lt;li&gt;之後若需從 OpenShift git clone 與這把 key 對應的應用程式, OpenShift 端會利用 settings 上所登錄的 public key 與 .ssh 目錄中的 id_rsa 進行驗證, 必須通過驗證才能順利完成倉儲的 git clone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 Ubuntu 平台上, 除了利用 ssh-keygen -t rsa 來建立 rsa 格式的 key pair 外, 其他步驟同 Windows.&lt;/p&gt;
&lt;p&gt;至於在 Windows 配合 Filezilla 與 OpenShift 雲端應用程式相連時, 必須利用 pageant.exe 載入 private key 後才能通過認証, 而在 Ubuntu 則可以透過 ssh-add ~/.ssh/id_rsa, 載入對應的 private key.&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category></entry><entry><title>機械設計流程的內容與管理</title><link href="http://chiamingyen.github.io/kmolab/blog/ji-jie-she-ji-liu-cheng-de-nei-rong-yu-guan-li.html" rel="alternate"></link><updated>2016-03-12T22:52:53+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-12:kmolab/blog/ji-jie-she-ji-liu-cheng-de-nei-rong-yu-guan-li.html</id><summary type="html">&lt;p&gt;機械設計流程中可能產生的內容, 可分為口語表達、文字表達、2D 圖像、3D 表達、解析表達與實體表達等六大類.&lt;/p&gt;


&lt;p&gt;所謂的口語表達即是在機械設計過程中採口頭方式呈現, 可以利用錄音方式將口語表達轉為 mp3, 或者採逐字稿, 轉為文字檔, 然後上傳到網際內容管理系統.&lt;/p&gt;
&lt;p&gt;文字表達就網際而言, 就是利用 html 將文字內容寫在全球資訊網路上, 也可以整理成 pdf, 或其他格式的文字檔, 然後再上傳到網際內容管理系統&lt;/p&gt;
&lt;p&gt;而 2D 圖像, 可以是一張照片, 手繪圖, 說明圖檔, 流程圖, 或者是產品的工程圖, 通常以 png、jpeg  或 gif 副檔名檔案格式.&lt;/p&gt;
&lt;p&gt;3D 表達, 包括一般影片、模擬動畫、CAD 零件, CAD 組件等.&lt;/p&gt;
&lt;p&gt;解析表達就是與機械設計相關的理論分析, 可以是方程式推導, 設計流程最佳化或各類型 CAE 模擬分析.&lt;/p&gt;
&lt;p&gt;實體表達就是實際做出實體的過程, 牽涉許多不同類型的製造程序, 一旦根據前述的五種表達方式模擬與規劃之後, 透過原型實驗測試來驗證機械設計的可行性與可靠度.&lt;/p&gt;
&lt;p&gt;以下則是利用 2D 圖像來表達數學式:&lt;/p&gt;
&lt;p&gt;在文章中, 一旦啟用 render_math plugin, 就可以利用一前一後的 $ 與數學式相連的方式來呈現符號.&lt;/p&gt;
&lt;p&gt;例如: 前後用 $ 符號包圍 e=mc^2, 可以得到:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(e=mc^2\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;也可以利用一對 $$ 符號界定方程式, 利用 LaTeX 語法來表示:&lt;/p&gt;
&lt;p&gt;x^2  被一前一後的兩個 $$ 包圍, 可以得到:&lt;/p&gt;
&lt;div class="math"&gt;$$
x^2 
$$&lt;/div&gt;
&lt;p&gt;A_\text{c} = (\pi/4) d^2 則得到:&lt;/p&gt;
&lt;div class="math"&gt;$$
A_\text{c} = (\pi/4) d^2
$$&lt;/div&gt;
&lt;p&gt;\alpha{}_t(i) = P(O_1, O_2, … O_t, q_t = S_i \lambda{}) 則得到:&lt;/p&gt;
&lt;div class="math"&gt;$$
\alpha{}_t(i) = P(O_1, O_2, … O_t, q_t = S_i \lambda{})
$$&lt;/div&gt;
&lt;p&gt;\cos (2\theta) = \cos^2 \theta - \sin^2 \theta 則得到:&lt;/p&gt;
&lt;div class="math"&gt;$$
\cos (2\theta) = \cos^2 \theta - \sin^2 \theta
$$&lt;/div&gt;
&lt;p&gt;\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2} 則得到:&lt;/p&gt;
&lt;div class="math"&gt;$$
\int_0^\infty e^{-x^2} dx=\frac{\sqrt{\pi}}{2}
$$&lt;/div&gt;
&lt;p&gt;y =x^4 + 4 \nonumber \
=(x^2+2)^2 -4x^2 \nonumber \
\le(x^2+2)^2&lt;/p&gt;
&lt;p&gt;則成為:&lt;/p&gt;
&lt;div class="math"&gt;$$
y =x^4 + 4 \nonumber \\
=(x^2+2)^2 -4x^2 \nonumber \\
\le(x^2+2)^2
$$&lt;/div&gt;
&lt;p&gt;\lim_{x \to a} f(x) 則成為:&lt;/p&gt;
&lt;div class="math"&gt;$$
\lim_{x \to a} f(x)
$$&lt;/div&gt;
&lt;p&gt;而程式碼的部份, 則使用 syntaxhighlighter 來顯示:&lt;/p&gt;
&lt;pre class="brush: python; html-script: true"&gt;
# python 程式碼
# 定義一個 myfunction 函式
def myfunciont():
    # 設定變數 i 與 10 對應
    i = 10
    # 啟動一個 for 重複迴圈, 以 j 為指標變數
    for j in range(i):
        # 在迴圈中列印 j 變數的對應值
        print(j)
# 呼叫 myfunction 函式
myfunction()
&lt;/pre&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category></entry><entry><title>利用 Github 執行協同設計專案</title><link href="http://chiamingyen.github.io/kmolab/blog/li-yong-github-zhi-xing-xie-tong-she-ji-zhuan-an.html" rel="alternate"></link><updated>2016-03-08T16:34:58+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-08:kmolab/blog/li-yong-github-zhi-xing-xie-tong-she-ji-zhuan-an.html</id><summary type="html">&lt;p&gt;Github 的分散式版次管理, 可以讓機械設計工程師體會非同步協同的團隊合作模式, 在眾目睽睽之下, 所有與設計相關的細節都能夠加以保留.&lt;/p&gt;


&lt;h2&gt;協同設計規劃&lt;/h2&gt;
&lt;p&gt;協同產品設計實習的專案倉儲位於 &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt;, 其中的 gh-pages 分支可以對應到 Github Pages 的網頁 &lt;a href="http://2015fallhw.github.io/2016springcd/"&gt;http://2015fallhw.github.io/2016springcd/&lt;/a&gt;, 而需要依賴 Python 程式作為伺服器端的同步對應網站, 則位於 &lt;a href="http://cd-2015fallhw.rhcloud.com/"&gt;http://cd-2015fallhw.rhcloud.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;實習課程運作前的任務為 Task0: &lt;a href="http://chiamingyen.github.io/kmolab/blog/2016-spring-cd-task0.html"&gt;http://chiamingyen.github.io/kmolab/blog/2016-spring-cd-task0.html&lt;/a&gt; 主旨在利用 Python 程式對所有學員進行分組, 每一組 4-7 人, 經過自由籌組之後, 利用雲端即時試算表, 收集各組組員的學號後, 根據學號遞增排列, 分別排出組序並決定各組組長後, 各組長將納為 &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt; 倉儲與&lt;a href="http://cd-2015fallhw.rhcloud.com/"&gt;http://cd-2015fallhw.rhcloud.com/&lt;/a&gt; OpenShift 網站的協同管理者.&lt;/p&gt;
&lt;p&gt;各組組長的任務在協助審核或回應各協同組員所提交的 Pull Request 改版資料, 而各改版資料的內容即在分別解決各組所被交付的實習任務.&lt;/p&gt;
&lt;p&gt;Task0: &lt;a href="http://chiamingyen.github.io/kmolab/blog/2016-spring-cd-task0.html"&gt;http://chiamingyen.github.io/kmolab/blog/2016-spring-cd-task0.html&lt;/a&gt; 的實習任務目的, 希望各組能夠利用 OpenShift 雲端系統中的 Python3 應用程式, 以 Flask 網際框架: &lt;a href="http://flask.pocoo.org/"&gt;http://flask.pocoo.org/&lt;/a&gt;, 建立自動分組的網際程式, 而這個程式延伸自先前的計算機程式與電腦輔助設計實習課程的內容: &lt;a href="https://github.com/2015fallhw/cptocadp"&gt;https://github.com/2015fallhw/cptocadp&lt;/a&gt;. 希望以 Ethercalc 所採集到的分組學號原始資料作為輸入, 使用者可以利用 Task0 網際程式, 輸入這些原始資料後, 選擇組長排序規定 (遞增或遞減), 並選擇定組序規定 (遞增或遞減) 後, 網際程式可以自動列出各組組長名單, 各組組員名單, 以及依照電腦教室座位列表的學員座位表, 還有依照學號次序排列的座位表等.&lt;/p&gt;
&lt;p&gt;Task0 實習任務牽涉如何利用 Python 程式讀取資料檔, 按照各行資料納入數列資料結構, 如何進行數列的排序, 如何根據電腦教室的座位約束條件, 將學員逐一按照特定方法納入座位.&lt;/p&gt;
&lt;p&gt;Task0 實習任務的相關程式架構, 可以修改為網際機械元件設計系統, 使用者提供基本輸入要求, 網際輔助設計程式便可以根據設計條件執行運算後列出結果.&lt;/p&gt;
&lt;h2&gt;Github 的 Pull Request 協同&lt;/h2&gt;
&lt;p&gt;使用 Github 的 Pull Request 協同之前, 各協同組員必須先登入 Github 後, fork &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt; 父倉儲, 之後所有的組員協同將在各自 fork 後的子倉儲中進行.&lt;/p&gt;
&lt;p&gt;完成上述 fork 倉儲之後,各使用者利用 git clone 將這個 fork 的子倉儲複製到近端, 然後再依據 master 分支 (用於與 OpenShift 網站同步) 或 gh-pages 分支 (用於 Github Pages 網站) 中的內容, 切換各分支內容到近端工作目錄中工作.&lt;/p&gt;
&lt;p&gt;為了方便, 也可以讓 master 與 gh-pages 分支的資料同步, 然後再將 master 版本資料推送到 OpenShift 雲端網站中開機啟動運行.&lt;/p&gt;
&lt;p&gt;當各組員在近端倉儲完成特定任務後, 可以利用 ungit:&lt;a href="https://github.com/FredrikNoren/ungit"&gt;https://github.com/FredrikNoren/ungit&lt;/a&gt; 或 sourcetree: &lt;a href="https://www.sourcetreeapp.com/"&gt;https://www.sourcetreeapp.com/&lt;/a&gt; 或可攜 sourcetree: &lt;a href="https://github.com/cosmomill/SourceTreePortable"&gt;https://github.com/cosmomill/SourceTreePortable&lt;/a&gt; 或 git 命令套件: &lt;a href="https://github.com/msysgit/msysgit/releases"&gt;https://github.com/msysgit/msysgit/releases&lt;/a&gt;, 將近端資料提交推送到個人的子倉儲中, 然後再透過 pull request, 請求各組組長將子倉儲的改版資料納入父倉儲中.&lt;/p&gt;
&lt;p&gt;當 Taks0 任務結束後, 各組組員可以透過 Pull Request 逆轉提交的方式, 設法自動或手動合併遠端 &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt; 倉儲的資料, 然後再透過 git pull 的方式拉到近端, 以便用協同倉儲的最新資料執行 Task1.&lt;/p&gt;
&lt;h2&gt;Github Pull Request 逆轉&lt;/h2&gt;
&lt;p&gt;Pull Request 的功能在 fork 某一倉儲資料後進行改版後, 可以要求原倉儲管理者 (這裡的管理者係指各組組長), 將各組員的改版資料併入父倉儲, 而當原始倉儲經過各組協同, 不斷改版後, 各參與 Pull Request 的學員, 則可以利用 Github 的 Pull Request 逆轉設定, 更新自己的倉儲資料內容.&lt;/p&gt;
&lt;p&gt;所謂的 Pull Request 逆轉方法, 其觀念正好與 Pull Request 相反, 因為 Pull Request 希望被 fork 的原始倉儲 (父倉儲) 能夠取回已經被改版的各組員倉儲 (子倉儲) 資料, 而所謂的 Pull Request 逆轉, 就是各組員在各自的倉儲中, 新增 Pull Request, 但是要將 Pull Request 的 base 與 head 的兩端資料選項互換, 也就是將 base fork 設為子倉儲的分支, 而 head fork 就設為父倉儲的對應分支, 如此就可以透過此一 Pull Request 從父倉儲取得最新的資料內容, 而在 Github 的  New Pull Request 頁面中, 就提供了這個 switching base 的功能.&lt;/p&gt;
&lt;p&gt;在以下的範例畫面中, 2015fallhw/2016springcd 為父倉儲, coursemdetw 登入 Github 後, 連結到 &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt;, 就可以 fork 此一倉儲, 操作後回到 coursemdetw/2016springcd 倉儲畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著 coursemdetw 用戶將 &lt;a href="https://github.com/coursemdetw/2016springcd"&gt;https://github.com/coursemdetw/2016springcd&lt;/a&gt; 資料 git clone 到近端, 然後對 master 分支中的資料進行改版後提交推送回 &lt;a href="https://github.com/coursemdetw/2016springcd"&gt;https://github.com/coursemdetw/2016springcd&lt;/a&gt; 倉儲, 操作後畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著, 因為子倉儲的資料已經改版, 所以 Github 的對應倉儲頁面中, 出現了 New pull request 的按鈕, 表示可以利用新增 pull request, 請求父倉儲將此一版本拉回合併, 按下 New pull request 之後的畫面如下, 特別注意, 這個時候的 base fork 為 2015fallhw/2016springcd 父倉儲的 master 分支, 而 head fork 則為 coursemdetw/2016springcd 子倉儲的 master 分支, 表示請求的新版本內容為 head fork, 希望併入 base fork 中.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;當子倉儲的使用者按下 Create pull request 後的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_5.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;此時從 coursemdetw 的 pull request 畫面中, 可以看到這個版本與父倉儲的版本沒有衝突, 可以自動合併, 但是 coursemdetw 沒有權限合併, 必須讓父倉儲的管理者 (各組組長將具有此權限), 檢查此一 pull request 的請求內容, 確定沒有問題後, 再將資料納入父倉儲中.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_6.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;當組長登入 Github, 進入父倉儲之後, 便可以合併上述組員的 pull request, 操作後畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_7.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;此時, 另外一位組員 course-mde-tw, 原先與 coursemdetw 組員同時在組員改版之前 fork 了父倉儲的資料, 但此時 course-mde-tw 若希望能夠取得已經透過 pull request 流程併入父倉儲的資料, 則可以登入 Github 後, 利用反向的 pull request 設定, 就可以更新資料, 取得 coursemdetw 組員併入父倉儲的資料. course-mde-tw 登入 Github 後進入自己的子倉儲, 然後按下 New pull request 的按鈕後, 進入如下的畫面, 其中, 所謂的 pull request reversing 就是按下 switching the base 按鈕.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_8.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;先看一下上一個畫面中的 base fork 為 2015fallhw/2016springcd 中的 master 分支, 而 head fork 則為 course-mde-tw/2016springcd 中的 master 分支, 表示一般的 pull request 是從子倉儲 (head fork) 將資料併入父倉儲 (base fork).&lt;/p&gt;
&lt;p&gt;但是, 現在 course-mde-tw 用戶希望能夠從父倉儲取得最新資料, 因此必須就必須按下 switch the base 後, 如下一個畫面, 讓 base fork 變成 course-mde-tw/2016springcd, 而 head fork 則設為 2015fallhw/2016springcd, 表示此一請求是從父倉儲取版本資料.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_quest_reversing_9.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;course-mde-tw 用戶按下上一個畫面中的 Create pull request 按鈕後, 進入下一個畫面, 可以填寫 pull request 的標題與說明.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_10.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;course-mde-tw 填寫完 pull request 的請求後, 按下送出, 就可以在此一 pull request 中具備同意權, 因為版本資料是從父倉儲更新到子倉儲, 若兩端資料沒有衝突就可以直接在 Github 的畫面中, 按下 Merge pull request 自動完成合併, 畫面如下圖.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/github_pull_request_reversing_11.png" width="800" /&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="協同產品設計實習"></category></entry><entry><title>KMOL 可攜程式系統改版</title><link href="http://chiamingyen.github.io/kmolab/blog/kmol-ke-xi-cheng-shi-xi-tong-gai-ban.html" rel="alternate"></link><updated>2016-03-03T20:54:35+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-03-03:kmolab/blog/kmol-ke-xi-cheng-shi-xi-tong-gai-ban.html</id><summary type="html">&lt;p&gt;將原有的 nodejs 目錄刪除, 改用 NodeJSPortable, 位於 apps 目錄下, 仍以 start_ungit.bat 啟動&lt;/p&gt;


&lt;p&gt;直接下載: 2016springkmol.7z &lt;a href="https://my.pcloud.com/publink/show?code=XZT4I4Ztpna2PMhDtVAOQKD7FI6CyfFf2H7"&gt;https://my.pcloud.com/publink/show?code=XZT4I4Ztpna2PMhDtVAOQKD7FI6CyfFf2H7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;利用 git clone 下載: &lt;a href="https://github.com/chiamingyen/kmol2016.git"&gt;https://github.com/chiamingyen/kmol2016.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在電腦輔助設計室 &lt;a href="http://cadlab.mde.tw"&gt;http://cadlab.mde.tw&lt;/a&gt; 時 &lt;a href="http://140.130.17.17/public/fix2016.zip"&gt;下載 fix2016.zip&lt;/a&gt;.&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category><category term="協同產品設計實習"></category></entry><entry><title>2016 Spring Collaborative Product Design Course</title><link href="http://chiamingyen.github.io/kmolab/blog/2016-spring-collaborative-product-design-course.html" rel="alternate"></link><updated>2016-02-24T21:32:24+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-02-24:kmolab/blog/2016-spring-collaborative-product-design-course.html</id><summary type="html">&lt;p&gt;2016 Spring 產品設計實習課程 W1&lt;/p&gt;


&lt;h2&gt;2016 Spring 協同產品設計實習:&lt;/h2&gt;
&lt;h3&gt;可攜套件倉儲:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/chiamingyen/kmol2016"&gt;https://github.com/chiamingyen/kmol2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;kmol2016 下載:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZH5J4ZOj9C9aomi5F1DtnuQNIHYLDO7EjX"&gt;https://my.pcloud.com/publink/show?code=XZH5J4ZOj9C9aomi5F1DtnuQNIHYLDO7EjX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;啟動倉儲 &lt;a href="https://github.com/2015fallhw/test"&gt;https://github.com/2015fallhw/test&lt;/a&gt;, ungit: &lt;a href="https://github.com/FredrikNoren/ungit"&gt;https://github.com/FredrikNoren/ungit&lt;/a&gt; 工具導入&lt;/p&gt;
&lt;p&gt;網際繪圖程式庫 (與 WCM 課程共用): &lt;a href="https://github.com/2015fallhw/arcidau"&gt;https://github.com/2015fallhw/arcidau&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github Pages 網站: &lt;a href="http://2015fallhw.github.io/arcidau/"&gt;http://2015fallhw.github.io/arcidau/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Task 1: &lt;/p&gt;
&lt;p&gt;如何求出下列圖形中的4個相切點座標? 如何自行利用程式畫出這個 2D 的輪廓圖? (or Solvespace 或 PTC Creo Parametric 或 Onshape 是如何讓使用者運用繪圖工具完成此類, 具有特定尺寸與相關約束條件的產品輪廓圖)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/2016cd_task1.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;動機 1:&lt;/p&gt;
&lt;p&gt;從 &lt;a href="http://rattlecad.sourceforge.net/"&gt;http://rattlecad.sourceforge.net/&lt;/a&gt; 可以得知桌面下單機的客製化自行車零組件繪圖工具, 能讓使用者根據自身尺寸, 訂製各零組件, 因此若能透過網路協同, 讓產品使用者、零件設計者、標準零件供應商與零組件製造商, 共同參與某一特定產品的設計與製造, 協同者需要俱備那些條件, 打造那些系統?該如何協同?&lt;/p&gt;
&lt;p&gt;解題規劃:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;該如何求出相切點的座標?我們擁有那些工具?在近端?在遠端?採用商用套件或自由開放工具?學會之後, 這些工具能否讓我們帶出學校合法使用?&lt;/li&gt;
&lt;li&gt;求出各相切點座標後, 該如何進行繪圖?我們擁有那些工具?採用商用套件或自由開放工具?學會之後, 這些工具能否讓我們帶出學校合法使用?&lt;/li&gt;
&lt;li&gt;畫出所需要的輪廓圖之後, 該如何以分組協同的方式打造類似 &lt;a href="http://rattlecad.sourceforge.net/"&gt;http://rattlecad.sourceforge.net/&lt;/a&gt; 的客製化產品設計工具?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;協同倉儲: &lt;a href="https://github.com/2015fallhw/2016springcd"&gt;https://github.com/2015fallhw/2016springcd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;協同倉儲對應 Github Pages 網站: &lt;a href="http://2015fallhw.github.io/2016springcd/"&gt;http://2015fallhw.github.io/2016springcd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;技術回顧:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Git 的功能? Github Pages 的功能?&lt;/li&gt;
&lt;li&gt;Python3 的功能? &lt;a href="http://jupyter.org/"&gt;http://jupyter.org/&lt;/a&gt; 的功能?&lt;/li&gt;
&lt;li&gt;OpenShift 的功能? Html5 與 Canvas 的功能? &lt;a href="http://2015fallhw.github.io/arcidau/"&gt;http://2015fallhw.github.io/arcidau/&lt;/a&gt; 所提供的功能?&lt;/li&gt;
&lt;li&gt;Vimeo 的功能? &lt;a href="https://www.pcloud.com/"&gt;https://www.pcloud.com/&lt;/a&gt; 的功能? (用來取代 copy.com)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;歷年課程回顧&lt;/h2&gt;
&lt;h3&gt;2015 Spring 協同產品設計實習:&lt;/h3&gt;
&lt;p&gt;Wordpress: &lt;a href="http://wordpress-2015course.rhcloud.com/?cat=3"&gt;http://wordpress-2015course.rhcloud.com/?cat=3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CMSimply: &lt;a href="http://cd-cadp.rhcloud.com/"&gt;http://cd-cadp.rhcloud.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vimeo 教學影片: &lt;a href="https://vimeo.com/tag:2015cd"&gt;https://vimeo.com/tag:2015cd&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2014 Spring 協同產品設計實習:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://wiki.mde.tw/doku.php?id=%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88:%E5%AF%A6%E7%BF%92%E7%9B%AE%E6%A8%99"&gt;Dokuwiki 網站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2a Github 倉儲: &lt;a href="https://github.com/coursemdetw/2014cda"&gt;https://github.com/coursemdetw/2014cda&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2a OpenShift 同步網站: &lt;a href="http://2014cda-mdenfu.rhcloud.com/"&gt;http://2014cda-mdenfu.rhcloud.com/&lt;/a&gt; (以 2014cdaproject@ 帳號負責維護)&lt;/p&gt;
&lt;p&gt;2b Github 倉儲: &lt;a href="https://github.com/coursemdetw/2014cdb"&gt;https://github.com/coursemdetw/2014cdb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2b OpenShift 同步網站: &lt;a href="http://2014cdb-mdenfu.rhcloud.com/"&gt;http://2014cdb-mdenfu.rhcloud.com/&lt;/a&gt; (以 2014cdaproject@ 帳號負責維護)&lt;/p&gt;
&lt;p&gt;同年 C2 Github 倉儲: &lt;a href="https://github.com/coursemdetw/2014c2"&gt;https://github.com/coursemdetw/2014c2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同年程式語言(二)課程網頁: &lt;a href="http://2014c2-mdenfu.rhcloud.com/"&gt;http://2014c2-mdenfu.rhcloud.com/&lt;/a&gt; (以 2014cdaproject@ 帳號負責維護)&lt;/p&gt;
&lt;p&gt;Vimeo 教學影片: &lt;/p&gt;
&lt;p&gt;W1-1 &lt;a href="https://vimeo.com/87531218"&gt;https://vimeo.com/87531218&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W1-2 &lt;a href="https://vimeo.com/87534543"&gt;https://vimeo.com/87534543&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W2-a1 &lt;a href="https://vimeo.com/88125916"&gt;https://vimeo.com/88125916&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W2-b1 &lt;a href="https://vimeo.com/88225866"&gt;https://vimeo.com/88225866&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W2-b2 &lt;a href="https://vimeo.com/88229349"&gt;https://vimeo.com/88229349&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W2-3 &lt;a href="https://vimeo.com/88230051"&gt;https://vimeo.com/88230051&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W3-a1 &lt;a href="https://vimeo.com/88719135"&gt;https://vimeo.com/88719135&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W3-a2 &lt;a href="https://vimeo.com/88720436"&gt;https://vimeo.com/88720436&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W3-b1 &lt;a href="https://vimeo.com/88847174"&gt;https://vimeo.com/88847174&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W3-b2 &lt;a href="https://vimeo.com/88855247"&gt;https://vimeo.com/88855247&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W4-a1 &lt;a href="https://vimeo.com/89371363"&gt;https://vimeo.com/89371363&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W5-a1 &lt;a href="https://vimeo.com/89371363"&gt;https://vimeo.com/89371363&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W5-a2 &lt;a href="https://vimeo.com/89980644"&gt;https://vimeo.com/89980644&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W5-a3 &lt;a href="https://vimeo.com/89986371"&gt;https://vimeo.com/89986371&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W5-b1 &lt;a href="https://vimeo.com/90098081"&gt;https://vimeo.com/90098081&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W6-a1 &lt;a href="https://vimeo.com/90607449"&gt;https://vimeo.com/90607449&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W6-a2 &lt;a href="https://vimeo.com/90612598"&gt;https://vimeo.com/90612598&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W6-b1 &lt;a href="https://vimeo.com/90726318"&gt;https://vimeo.com/90726318&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W6-b2 &lt;a href="https://vimeo.com/90731025"&gt;https://vimeo.com/90731025&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W7-b1 &lt;a href="https://vimeo.com/91490333"&gt;https://vimeo.com/91490333&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W7-b2 &lt;a href="https://vimeo.com/91491493"&gt;https://vimeo.com/91491493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W11-a1 &lt;a href="https://vimeo.com/94104234"&gt;https://vimeo.com/94104234&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Camstudio 與 Zoomit &lt;a href="https://vimeo.com/90818335"&gt;https://vimeo.com/90818335&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Video Converter &lt;a href="https://vimeo.com/90818467"&gt;https://vimeo.com/90818467&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W12-a1 &lt;a href="https://vimeo.com/95069384"&gt;https://vimeo.com/95069384&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W13-a1 &lt;a href="https://vimeo.com/95823422"&gt;https://vimeo.com/95823422&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W13-a2 &lt;a href="https://vimeo.com/95823554"&gt;https://vimeo.com/95823554&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W13-b1 &lt;a href="https://vimeo.com/95946099"&gt;https://vimeo.com/95946099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W13-b2 &lt;a href="https://vimeo.com/95946189"&gt;https://vimeo.com/95946189&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W14-a1 &lt;a href="https://vimeo.com/96546108"&gt;https://vimeo.com/96546108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;W14-b1 &lt;a href="https://vimeo.com/96671856"&gt;https://vimeo.com/96671856&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2013 Spring 協同產品設計實習:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://blog.kmol.info/indexd65e.html?cat=8"&gt;http://blog.kmol.info/indexd65e.html?cat=8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2013 CP: &lt;a href="http://cp-2013fall.rhcloud.com/"&gt;http://cp-2013fall.rhcloud.com/&lt;/a&gt; (以 2013fall@mde.tw 帳號控管)&lt;/p&gt;
&lt;h3&gt;2012 Spring 協同產品設計實習:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://blog.kmol.info/indexd06b.html?cat=8&amp;amp;paged=3"&gt;http://blog.kmol.info/indexd06b.html?cat=8&amp;amp;paged=3&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2011 Spring 協同產品設計實習:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://blog.kmol.info/index8040.html?cat=8&amp;amp;paged=4"&gt;http://blog.kmol.info/index8040.html?cat=8&amp;amp;paged=4&lt;/a&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="協同產品設計實習"></category></entry><entry><title>About Lektor Content Management System</title><link href="http://chiamingyen.github.io/kmolab/blog/about-lektor-content-management-system.html" rel="alternate"></link><updated>2016-02-24T15:30:43+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-02-24:kmolab/blog/about-lektor-content-management-system.html</id><summary type="html">&lt;p&gt;初探 Lektor 內容管理系統, 假如它能在第1時間就支援 Python3, 應該會更棒&lt;/p&gt;


&lt;p&gt;&lt;a href="http://lucumr.pocoo.org/2015/12/21/introducing-lektor/"&gt;http://lucumr.pocoo.org/2015/12/21/introducing-lektor/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lektor/lektor"&gt;https://github.com/lektor/lektor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lektor"&gt;https://github.com/lektor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lektor 的作者說, 我們與其他類似的工具都不相同: &lt;a href="https://www.getlektor.com/docs/what/"&gt;https://www.getlektor.com/docs/what/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lektor 是靜態文件網頁&lt;/p&gt;
&lt;p&gt;也是內容管理系統&lt;/p&gt;
&lt;p&gt;還能當作程式框架&lt;/p&gt;
&lt;p&gt;可以協同, 也允許同步&lt;/p&gt;
&lt;p&gt;有人說, Lektor 很像 &lt;a href="http://urubu.jandecaluwe.com/"&gt;http://urubu.jandecaluwe.com/&lt;/a&gt;, 但有更好的管理環境&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.getlektor.com/docs/what/"&gt;https://www.getlektor.com/docs/what/&lt;/a&gt; 網站的資料就放在 &lt;a href="https://github.com/lektor/lektor-website"&gt;https://github.com/lektor/lektor-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只不過, 目前的 Desktop 應用程式只能用在 OsX 系統, 而 Python 也只支援 2.7 版, 真是可惜!&lt;/p&gt;
&lt;p&gt;有關目前只能支援 Python 2.7 的情形, 幾乎就與當年 Flask 推出時的情況一樣, 也許作者對於 Python 2.7 版比較熟, 可能要再等一陣子, 才能在 Python3 的環境中使用了.&lt;/p&gt;
&lt;p&gt;所以, 現階段, 想要靜態網頁系統, 而且自外於 Pelican: &lt;a href="https://github.com/getpelican/pelican"&gt;https://github.com/getpelican/pelican&lt;/a&gt;, 只能先從 &lt;a href="http://urubu.jandecaluwe.com/"&gt;http://urubu.jandecaluwe.com/&lt;/a&gt; 看起.&lt;/p&gt;
&lt;p&gt;另外, 假如想要脫離 Python3 一些些, 可以從 &lt;a href="https://github.com/meteor/meteor"&gt;https://github.com/meteor/meteor&lt;/a&gt; 入手.&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category></entry><entry><title>2016 CD course</title><link href="http://chiamingyen.github.io/kmolab/blog/2016-cd-course.html" rel="alternate"></link><updated>2016-02-24T10:43:59+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-24:kmolab/blog/2016-cd-course.html</id><summary type="html">&lt;p&gt;2016 Spring 協同產品設計實習課程規劃&lt;/p&gt;
&lt;h2&gt;MCAD 套件&lt;/h2&gt;
&lt;p&gt;Mechanical Computer Aided Design (MCAD) 套件將使用:&lt;/p&gt;
&lt;p&gt;Onshape: &lt;a href="https://www.onshape.com/"&gt;https://www.onshape.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Solvespace: &lt;a href="http://solvespace.com/index.pl"&gt;http://solvespace.com/index.pl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PTC Creo Parametric: &lt;a href="http://www.ptc.com/cad/creo/parametric"&gt;http://www.ptc.com/cad/creo/parametric&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rattleCAD: &lt;a href="http://rattlecad.sourceforge.net/"&gt;http://rattlecad.sourceforge.net/&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;零組件繪圖與設計&lt;/h2&gt;
&lt;p&gt;將以自行車設計與 3D 模型組裝作為主題&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/gocycle1.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/gocycle2.png" width="600" /&gt;&lt;/p&gt;
&lt;h2&gt;標準零件庫&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.mcmaster.com/"&gt;http://www.mcmaster.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bolts-library.org/"&gt;http://www.bolts-library.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://b2b.partcommunity.com/community/"&gt;https://b2b.partcommunity.com/community/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://grabcad.com/library/tag/bicycle"&gt;https://grabcad.com/library/tag/bicycle&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;客製化設計&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/vallettea/Bicycle"&gt;https://github.com/vallettea/Bicycle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.atom3dp.com/"&gt;http://www.atom3dp.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/smoqadam/PyFladesk-rss-reader"&gt;https://github.com/smoqadam/PyFladesk-rss-reader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Planar Linkage Analysis: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/planar_linkage_analysis.pdf"&gt;http://chiamingyen.github.io/kmolab_data/files/planar_linkage_analysis.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fourbar Synthesis: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/fourbar_synthesis.pdf"&gt;http://chiamingyen.github.io/kmolab_data/files/fourbar_synthesis.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spur Gear Design: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/spurGears.pdf"&gt;http://chiamingyen.github.io/kmolab_data/files/spurGears.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spur Gear in Creo Parametric: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/creo_spurgear.7z"&gt;http://chiamingyen.github.io/kmolab_data/files/creo_spurgear.7z&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Design of Spur and Helical Gears Transmissions: &lt;a href="https://github.com/efirvida/python-gearbox"&gt;https://github.com/efirvida/python-gearbox&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自行車控制設計: &lt;a href="https://plot.ly/ipython-notebooks/bicycle-control-design/"&gt;https://plot.ly/ipython-notebooks/bicycle-control-design/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Architecture of Collaboration: &lt;a href="http://chiamingyen.github.io/kmolab_data/files/architecture_of_collaboration.pdf"&gt;http://chiamingyen.github.io/kmolab_data/files/architecture_of_collaboration.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Pomax/bezierjs"&gt;https://github.com/Pomax/bezierjs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bicycledesign.net/"&gt;http://bicycledesign.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_bicycle_parts"&gt;https://en.wikipedia.org/wiki/List_of_bicycle_parts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bicycle Parts (自行車零件):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_parts.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Chains (鏈條):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_chain.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Crank (曲柄):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_crank.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Frame (車架):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_frame.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Front Derailleur (前變速器):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_frontDerailer.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Handle Bar (車把):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_handlebar.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Hub (花鼓):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_hub.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Lever (桿):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_lever.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Rear Derailleur (後變速器):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_rearDerailer.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Rear Hub and Casette (後輪花鼓與飛輪組):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_rearHub_Casette.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Seat (座墊):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_seat.jpg" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Wheel (車輪):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/bicycle_wheel.jpg" width="600" /&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;Bicycle 自行車
Tire 輪胎
Rim 輪圈
Saddle 坐墊
Seat post 座桿
Seat post clamp 座桿束子
Rear brake 後剎車
Front brake 前剎車
Seat stay 後上叉
Chain stay 後下叉
Seat tube 座管
Top tube 上管
Down tube 下管
Freewheel / cassette Sprockets 飛輪
Rear Ends/Dropouts 後叉端
Derailleur Cable 變速導線
Rear Derailleur 後變速器
Chain 鏈條
Pedal 腳踏
Front Derailleur 前變速器
軸 axle
滾珠軸承 ball bearing
車鈴 bicycle ball
車架 bicycle frame
Rear suspension 後避震
Chainwheel&amp;amp;cranks 大齒盤及曲柄
Valve 汽門嘴
Spoke (輪圈)幅條
Spoke Nipple (幅條)接頭
Front fork end 前叉端
Hubs 花鼓
Quick release 快拆桿
Front fork 前叉
Brake cable 剎車導線
Front crown 前叉肩蓋
Brake cable housing 剎車導線
Brake lever 剎車握把
Bar end 小手把（副把手）
Grip/tape 握把套
Head tube 頭管
Handlebar 車把
Derailleur lever 變速桿
Stem 豎管
Head parts 車頭碗組
Kickstand 停車柱
Chain cover 鏈蓋
Head Light 前燈
Back mirror 後照鏡
Reflector 反光片
Luggage Carrier 貨架
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="協同產品設計實習"></category><category term="2016 Spring"></category></entry><entry><title>2015 Fall CADP W16</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-cadp-w16.html" rel="alternate"></link><updated>2016-02-24T10:29:34+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-24:kmolab/blog/2015-fall-cadp-w16.html</id><summary type="html">&lt;p&gt;根據 &lt;a href="http://chiamingyen.github.io/kmolab_data/files/ProEMechanism.pdf"&gt;Nutcracker 機構&lt;/a&gt;的尺寸規格, 請設法算出 Piston 零件的有效運動範圍.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_left_limit.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_right_limit.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;計算 Piston 不發生干涉的有效行程, 可採如下方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;實際利用 Onshape 中的組立, 移動 piston 零件, 靠目測概略決定 piston 的有效行程. (目測法, 只能得到大概的行程範圍)&lt;/li&gt;
&lt;li&gt;利用 Solvespace 繪製 2D 約束圖, 然後利用約束點在線或圓上的方式, 以圖解法解出有效行程, 如下圖一, 圖二與圖三所示. (圖解法, 利用 Solvespace 既有的約束條件設定完成計算)&lt;/li&gt;
&lt;li&gt;利用 Jupyter 與 Python3 的 sympy 模組, 先進行符號式推導, 然後再利用數值分析解出 piston 的有效行程, 機構各點標示如下圖四所示, &lt;a href="https://github.com/2015fallhw/cptocadp/blob/master/ref/cadp_nutcracker.ipynb"&gt;計算出&lt;/a&gt;的 theta 轉角為 105.7, 如下圖五所示. (以自行編寫的 sympy 程式解題, 透過 Jupyterhub 可以有效進行協同設計運算)&lt;/li&gt;
&lt;li&gt;除了上述的目測, 圖解與符號式結合數值分析法之外, 也可以採用&lt;a href="https://github.com/2015fallhw/cptocadp/blob/master/ga_nutcracker1.py"&gt;基因演算法解題&lt;/a&gt;, 計算出的 theta 轉角為 105.7, 如下圖六所示. (利用演化法解題, 可以在單機運算, 也可以在 &lt;a href="https://github.com/2015fallhw/cptocadp/blob/master/ref/cadp_nutcracker.ipynb"&gt;Jupyterhub 平台&lt;/a&gt;上進行運算)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_solvespace1.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖一: 利用 Solvespace 中的繪圖約束條件找出右邊的極限點距離 Onshape Piston 組立原點 0.5&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_solvespace2.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖二: 利用 Solvespace 中的繪圖約束條件找出左邊的極限點距離 Onshape Piston 組立原點 2.23&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_solvespace3.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖三: 當 piston 位於左邊極限點時, AB 轉角為 105.37 度&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_analysis1.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖四: Jupyter 計算分析時機構各點標示圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_jupyter_result1.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖五: 利用 Jupyter 符號式結合數值分析法所得結果&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/nutcracker_ga_result1.png" width=600 /&gt;&lt;/p&gt;
&lt;p&gt;圖六: 利用基因演算解題, 所得到的結果, 當 piston 位於左邊極限點時, AB 轉角為 105.7 度&lt;/p&gt;
&lt;p&gt;若採用 &lt;a href="https://github.com/deap/deap"&gt;deap&lt;/a&gt; 與 numpy 解題 (AB 轉角極限為 105.71 度):&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 這裡採用 numpy 與 deap 模組解題, 使用 Genetic Algorithm 模式&lt;/span&gt;
&lt;span class="c"&gt;# 解的問題為 Nutcracker 左邊 connect 轉角極限&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;array&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deap&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deap&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;creator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;deap&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;
&lt;span class="c"&gt;# for evalIntersect 函式中的 sqrt, sin, cos, pi&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c"&gt;# 1/4 最小化題目 type of problem&lt;/span&gt;
&lt;span class="n"&gt;creator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;FitnessMin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fitness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
&lt;span class="n"&gt;creator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Individual&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;typecode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
               &lt;span class="n"&gt;fitness&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;creator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FitnessMin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 2/4 initilization&lt;/span&gt;
&lt;span class="c"&gt;# 兩個變數題目&lt;/span&gt;
&lt;span class="n"&gt;NDIM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;toolbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Toolbox&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;attr_float&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;individual&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initRepeat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;creator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Individual&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attr_float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NDIM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;population&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initRepeat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;individual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 3/4 選擇 operator step3/4&lt;/span&gt;
&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;select&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selRandom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 也可以採用下列設定&lt;/span&gt;
&lt;span class="c"&gt;#toolbox.register(&amp;quot;mate&amp;quot;, tools.cxTwoPoint)&lt;/span&gt;
&lt;span class="c"&gt;#toolbox.register(&amp;quot;mutate&amp;quot;, tools.mutGaussian, mu=0, sigma=1, indpb=0.1)&lt;/span&gt;
&lt;span class="c"&gt;#toolbox.register(&amp;quot;select&amp;quot;, tools.selTournament, tournsize=3, k=3)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;evalIntersect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;individual&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;individual&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;deg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;
    &lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;individual&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;deg&lt;/span&gt;
    &lt;span class="n"&gt;xtarget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;ytarget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;225&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;529&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;225&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; \
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;529&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;92&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;# 適應值&lt;/span&gt;
    &lt;span class="n"&gt;fitness_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xtarget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ytarget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# 指定 t 的範圍, 小於 1 大於 0, 否則給予處罰&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fitness_value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fitness_value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fitness_value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fitness_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;evaluate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evalIntersect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 以上到 evaluate 為止, 為定義 operators&lt;/span&gt;

&lt;span class="c"&gt;# 4/4 以下則為 Algorithms&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c"&gt;# Differential evolution parameters&lt;/span&gt;
    &lt;span class="n"&gt;CR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;
    &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; 
    &lt;span class="n"&gt;MU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
    &lt;span class="n"&gt;NGEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;   

    &lt;span class="n"&gt;pop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MU&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;hof&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HallOfFame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Statistics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fitness&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;avg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;std&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;min&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;max&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Evaluate the individuals&lt;/span&gt;
    &lt;span class="n"&gt;fitnesses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fitnesses&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fitness&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NGEN&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;agent&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NDIM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fitness&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
        &lt;span class="n"&gt;hof&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Best individual is &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hof&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;hof&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fitness&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
上述課程資料與 &lt;a href="http://wordpress-2015course.rhcloud.com/?p=4584#more-4584"&gt;Wordpress 網頁&lt;/a&gt;上的資料內容相同, Ｗordpress 網站屬於動態的網誌, 而 &lt;a href="http://chiamingyen.github.io/kmolab/"&gt;http://chiamingyen.github.io/kmolab/&lt;/a&gt; 則是靜態網誌系統, 採用靜態網誌的優點如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比較安全&lt;/li&gt;
&lt;li&gt;比較不會過時&lt;/li&gt;
&lt;li&gt;部署成本比較低&lt;/li&gt;
&lt;li&gt;可在各種平台上使用&lt;/li&gt;
&lt;li&gt;各階段改版資料均有紀錄&lt;/li&gt;
&lt;/ul&gt;</summary><category term="電腦輔助設計實習"></category><category term="2015 Fall cadp"></category></entry><entry><title>2016 Spring CD Task0</title><link href="http://chiamingyen.github.io/kmolab/blog/2016-spring-cd-task0.html" rel="alternate"></link><updated>2016-02-23T18:18:27+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-02-23:kmolab/blog/2016-spring-cd-task0.html</id><summary type="html">&lt;p&gt;這個實習任務的目的, 在讓學員根據分組與電腦教室座位編排的問題, 進行思考, 如何以協同方式或流程, 有效完成任務&lt;/p&gt;


&lt;p&gt;學期伊始, 一如往常, 各班學員以每 6 人一組為原則, 在 Cadlab 電腦教室安排固定座位, 但是 2016 Spring 開始, 儘管允許學員自行編組, 但是同組學員卻希望故意錯開座位, 讓所有爾後各組的產品設計解題都能夠儘量透過資訊與通訊系統完成, 而且所有溝通流程與內容都能夠存在產品開發專案中.&lt;/p&gt;
&lt;p&gt;首先採用 &lt;a href="https://ethercalc.tw/"&gt;https://ethercalc.tw/&lt;/a&gt; 讓所有上課學員, 以即時同步模式, 填入分組資料, 若以 2a 班級為例, 分組資料中只填入學員學號, 則可以直接從瀏覽器畫面中複製分組資料, 放入 SciTE 中, 存為 2016_cd_2a_1.txt, 若利用 ethercalc 的 clipboard 格式轉檔, 可以存為 csv 格式, 存為 2016_cd_2a_2.txt, 且從學校開課前學員選課資料, 可得選課學員學號名單, 存為 2016_cd_2a_3.txt.&lt;/p&gt;
&lt;p&gt;Task0 的任務, 就是以各班協同分組後所取得的這 3 個檔案開始, 依據下列敘述, 完成各班的 Cadlab 電腦教室座位表, 讓每一位學員都能夠知道所被分配的學期固定座位, 並在爾後上課依序入座.&lt;/p&gt;
&lt;p&gt;任務描述:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每組以 6 人為原則, 至少 4 人, 至多 7 人&lt;/li&gt;
&lt;li&gt;各組學員, 以學號遞增排序後, 排序第1者為組長, 負責代表該組與其他組進行溝通&lt;/li&gt;
&lt;li&gt;各組的班級分組序號, 則依據各組組長的學號, 再進行各組比序, 以遞增方式排列, 排序第1者為第1組, 其餘依序定下各組序號組別&lt;/li&gt;
&lt;li&gt;Cadlab 電腦教室的配置為每列 9 排, 共有 7 列, 因此若每人一台電腦排座位, 可以容納 63 名學員&lt;/li&gt;
&lt;li&gt;固定座位命名方式, 以面對講台的最右邊為第1排, 以最靠近講台者為第1列&lt;/li&gt;
&lt;li&gt;一旦各組依照學員學號排序定組序後, 第1組的第1名同學, 從第1排第1列開始固定座位, 接著排第二組的第1位同學, 排在第1排的第2列座位, 然後將第三組的第1位同學, 排在第1排的第3列座位, 依此類推&lt;/li&gt;
&lt;li&gt;座位安排中, 第1排排至第七列後, 則接著排在第2排的第1列座位上, 且各組若不及 7 位學員時, 則該座位由下一組的順位同學遞補&lt;/li&gt;
&lt;li&gt;完成座位編排後, 必須能夠轉為網頁格式, 放入各組的協同倉儲所對應的 gh-pages 網頁或 OpenShift 網頁中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能的任務變化:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;與上述編排座位的問題類似, 在產品開發過程中, 許多設計參數可能因為特定協同團隊的意見而變更&lt;/li&gt;
&lt;li&gt;上述座位編排問題, 可能從學號遞增排序, 改為遞減排序或亂數排序&lt;/li&gt;
&lt;li&gt;可能從原先的以排 (column) 為主 (也就是先排第1排, 之後排第2排), 改為以列 (row) 為主 (也就是先排第1列, 之後排第2列)&lt;/li&gt;
&lt;li&gt;假如電腦教室的配置更動, 從 9 排 7 列改為其他不同配置時, 整個座位安排流程, 就必須因應改變&lt;/li&gt;
&lt;li&gt;換言之, 假如上述問題並非採用電腦運算的方法完成, 而以人工或類比的方式進行, 不僅耗費時間, 容易出錯, 而且一旦相關原則變更, 都將重新勞師動眾一番&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;技術回顧:&lt;/p&gt;
&lt;p&gt;針對上述問題, 若希望利用 Python3 進行解題, 需要運用下列相關函式、方法或模組:&lt;/p&gt;
&lt;p&gt;with open ... as&lt;/p&gt;
&lt;p&gt;&lt;a href="http://openhome.cc/Gossip/Python/WithAs.html"&gt;http://openhome.cc/Gossip/Python/WithAs.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;readlines&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/tutorial/inputoutput.html"&gt;https://docs.python.org/3.4/tutorial/inputoutput.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;for ... in range&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/tutorial/controlflow.html?highlight=loop#for-statements"&gt;https://docs.python.org/3.4/tutorial/controlflow.html?highlight=loop#for-statements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;len&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html?#len"&gt;https://docs.python.org/3.4/library/functions.html?#len&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;append&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/tutorial/datastructures.html"&gt;https://docs.python.org/3.4/tutorial/datastructures.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;split&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/stdtypes.html#str.split"&gt;https://docs.python.org/3.4/library/stdtypes.html#str.split&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;list&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html#func-list"&gt;https://docs.python.org/3.4/library/functions.html#func-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sorted&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html#sorted"&gt;https://docs.python.org/3.4/library/functions.html#sorted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;filter&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html#filter"&gt;https://docs.python.org/3.4/library/functions.html#filter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;None, True, not&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/c-api/none.html"&gt;https://docs.python.org/3.4/c-api/none.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/constants.html#True"&gt;https://docs.python.org/3.4/library/constants.html#True&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/reference/expressions.html#not"&gt;https://docs.python.org/3.4/reference/expressions.html#not&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;str&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html#func-str"&gt;https://docs.python.org/3.4/library/functions.html#func-str&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;print&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/functions.html#print"&gt;https://docs.python.org/3.4/library/functions.html#print&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;g.es&lt;/p&gt;
&lt;p&gt;&lt;a href="http://leoeditor.com/tutorial-scripting.html"&gt;http://leoeditor.com/tutorial-scripting.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;zip_longest&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3.4/library/itertools.html#itertools.zip_longest"&gt;https://docs.python.org/3.4/library/itertools.html#itertools.zip_longest&lt;/a&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="協同產品設計實習"></category></entry><entry><title>computational thinking and digitally literate</title><link href="http://chiamingyen.github.io/kmolab/blog/computational-thinking-and-digitally-literate.html" rel="alternate"></link><updated>2016-02-21T21:47:57+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-02-21:kmolab/blog/computational-thinking-and-digitally-literate.html</id><summary type="html">&lt;p&gt;運算思維與數位化教育下的未來&lt;/p&gt;


&lt;p&gt;&lt;a href="https://www.gov.uk/government/publications/national-curriculum-in-england-computing-programmes-of-study/national-curriculum-in-england-computing-programmes-of-study"&gt;https://www.gov.uk/government/publications/national-curriculum-in-england-computing-programmes-of-study/national-curriculum-in-england-computing-programmes-of-study&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;computational thinking and digitally literate&lt;/p&gt;
&lt;p&gt;運算思維與數位化教育&lt;/p&gt;
&lt;p&gt;Computing has deep links with mathematics, science and design and technology, and provides insights into both natural and artificial systems.&lt;/p&gt;
&lt;p&gt;運算與數學、科學、設計及科技都有很緊密的關聯, 能讓我們充份了解自然或人造的系統.&lt;/p&gt;
&lt;p&gt;Computing also ensures that pupils become digitally literate – able to use, and express themselves and develop their ideas through, information and communication technology – at a level suitable for the future workplace and as active participants in a digital world.&lt;/p&gt;
&lt;p&gt;運算同時確保學習者俱備數位認知, 能夠運用、表達並透過資訊與通訊科技開展理念, 並在未來的數位世界職場中成為積極的參與者.&lt;/p&gt;
&lt;p&gt;Aims:&lt;/p&gt;
&lt;p&gt;運算教育的目標:&lt;/p&gt;
&lt;p&gt;can understand and apply the fundamental principles and concepts of computer science, including abstraction, logic, algorithms and data representation&lt;/p&gt;
&lt;p&gt;能夠了解並應用電腦科學的基本原理與概念, 包括抽象、邏輯, 演算法, 以及數據表達.&lt;/p&gt;
&lt;p&gt;can analyse problems in computational terms, and have repeated practical experience of writing computer programs in order to solve such problems&lt;/p&gt;
&lt;p&gt;能夠透過運算術語分析問題, 並且運用多重的程式編寫實務經驗, 來解決問題.&lt;/p&gt;
&lt;p&gt;can evaluate and apply information technology, including new or unfamiliar technologies, analytically to solve problems&lt;/p&gt;
&lt;p&gt;能夠應用資訊科技, 對全新或原本並不熟悉的科技進行評量, 能夠採解析方法解決各種問題.&lt;/p&gt;
&lt;p&gt;are responsible, competent, confident and creative users of information and communication technology&lt;/p&gt;
&lt;p&gt;成為肯負責、能勝任、具備信心與創意的資訊及通信科技使用者.&lt;/p&gt;</summary><category term="運算思維"></category><category term="數位化教育"></category></entry><entry><title>2016 Spring Web based Content Management</title><link href="http://chiamingyen.github.io/kmolab/blog/2016-spring-web-based-content-management.html" rel="alternate"></link><updated>2016-02-21T20:36:55+08:00</updated><author><name>kmol</name></author><id>tag:chiamingyen.github.io,2016-02-21:kmolab/blog/2016-spring-web-based-content-management.html</id><summary type="html">&lt;p&gt;2016 Spring 網際內容管理 W1&lt;/p&gt;


&lt;h2&gt;2016 Spring 網際內容管理:&lt;/h2&gt;
&lt;h3&gt;可攜套件倉儲:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/chiamingyen/kmol2016"&gt;https://github.com/chiamingyen/kmol2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;kmol2016 下載:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZH5J4ZOj9C9aomi5F1DtnuQNIHYLDO7EjX"&gt;https://my.pcloud.com/publink/show?code=XZH5J4ZOj9C9aomi5F1DtnuQNIHYLDO7EjX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github 倉儲: &lt;a href="https://github.com/2015fallhw/2016springwcm"&gt;https://github.com/2015fallhw/2016springwcm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github Pages 網站: &lt;a href="http://2015fallhw.github.io/2016springwcm/"&gt;http://2015fallhw.github.io/2016springwcm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網際繪圖程式庫 (與 CD 課程共用): &lt;a href="https://github.com/2015fallhw/arcidau"&gt;https://github.com/2015fallhw/arcidau&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github Pages 網站: &lt;a href="http://2015fallhw.github.io/arcidau/"&gt;http://2015fallhw.github.io/arcidau/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;結合 &lt;a href="http://reeborg.ca/"&gt;http://reeborg.ca/&lt;/a&gt; 與 &lt;a href="https://codemirror.net/"&gt;https://codemirror.net/&lt;/a&gt; 還有 &lt;a href="https://github.com/google/blockly"&gt;https://github.com/google/blockly&lt;/a&gt;,  我們能否自行打造類似 &lt;a href="https://studio.code.org/hoc/2"&gt;https://studio.code.org/hoc/2&lt;/a&gt; 的網站, 並且逐步建構泛用型網際 2D/3D 機械設計資源中心, 以探索、儲存與開發機械設計相關內容的網站邁進.&lt;/p&gt;
&lt;p&gt;參考:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/josephg/Chipmunk-js"&gt;https://github.com/josephg/Chipmunk-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viblo/pymunk"&gt;https://github.com/viblo/pymunk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/thang010146/videos"&gt;https://www.youtube.com/user/thang010146/videos&lt;/a&gt; (使用 AutoDesk Inventor 建置)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZO2f4ZQTLgWWIyTiuLdB3vkcuutS65plv7"&gt;機構介紹 1&lt;/a&gt; (pdf)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZI2f4ZdR1tblX7Tj0Wf6glOgW5fjSG6LYV"&gt;機構介紹 2&lt;/a&gt; (pdf)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZa2f4Z1faO9LKQUlQJhJkCSeQQzmHanqfy"&gt;機構介紹 3 &lt;/a&gt; (pdf)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://my.pcloud.com/publink/show?code=XZ32f4ZMrcoB5nWPC4coh9yQAaXSfbFuivk"&gt;機構介紹 4 &lt;/a&gt; (pdf)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.algodoo.com/"&gt;http://www.algodoo.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linkage &lt;a href="http://chiamingyen.github.io/linkage/"&gt;http://chiamingyen.github.io/linkage/&lt;/a&gt; 操作步驟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按下 c 刪除畫面所有內容&lt;/li&gt;
&lt;li&gt;利用滑鼠左鍵, 在螢幕點出4個四連桿的4個關鍵點&lt;/li&gt;
&lt;li&gt;利用滑鼠左鍵, 點選第一個點 ,令其變為藍色&lt;/li&gt;
&lt;li&gt;再以滑鼠左鍵, 點選第1桿件的第二個點, 滑鼠按下後, 先不要放開, 等左手按下 Alt 後, 並讓 Alt 鍵與滑鼠左鍵同時放開, 就可以順利利用第1點與第2點建立一個連桿&lt;/li&gt;
&lt;li&gt;利用相同方法 ,建立第2與第3可動桿&lt;/li&gt;
&lt;li&gt;以滑鼠左鍵, 選擇第1點, 然後按下 f 鍵, 表示要固定這個點, 此時點的顏色轉為紅色, 並且釋出其對應的自由度&lt;/li&gt;
&lt;li&gt;再用相同方法 ,固定第四點&lt;/li&gt;
&lt;li&gt;選擇要追蹤的點, 然後按下 t (tracking)&lt;/li&gt;
&lt;li&gt;機構的作動則依靠, 選追蹤點, 左手按住 Shift 鍵, 然後移動滑鼠位置, 讓追蹤點隨滑鼠移動, 即可留下特定點的運動軌跡.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;歷年課程回顧&lt;/h2&gt;
&lt;h3&gt;2015 Spring 網際內容管理:&lt;/h3&gt;
&lt;p&gt;Wordpress: &lt;a href="http://wordpress-2015course.rhcloud.com/?cat=2"&gt;http://wordpress-2015course.rhcloud.com/?cat=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cd-cadp.rhcloud.com/get_page?heading=%E7%B6%B2%E9%9A%9B%E5%85%A7%E5%AE%B9%E7%AE%A1%E7%90%86"&gt;CMSimply 網站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github 倉儲: &lt;a href="https://github.com/coursemdetw/2015wcm"&gt;https://github.com/coursemdetw/2015wcm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gitbook: &lt;a href="https://www.gitbook.com/book/coursemde/2015wcm"&gt;https://www.gitbook.com/book/coursemde/2015wcm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vimeo 教學影片: &lt;a href="https://vimeo.com/tag:2015wcm"&gt;https://vimeo.com/tag:2015wcm&lt;/a&gt;&lt;/p&gt;</summary><category term="2016 Spring"></category><category term="網際內容管理"></category></entry><entry><title>2015 Fall CP part 2</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-cp-part-2.html" rel="alternate"></link><updated>2016-02-13T09:45:39+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-13:kmolab/blog/2015-fall-cp-part-2.html</id><summary type="html">&lt;p&gt;2015 Fall 計算機程式課程內容 part2&lt;/p&gt;
&lt;p&gt;2015 Fall 計算機程式課程倉儲分別為&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcpa"&gt;https://github.com/2015fallhw/2015fallcpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;與&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcpb"&gt;https://github.com/2015fallhw/2015fallcpb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2015 Fall CP 課程 part2 影片摘要:&lt;/p&gt;
&lt;h2&gt;CP W12&lt;/h2&gt;
&lt;h3&gt;介紹從 fix.bat 的搭建到猜顏色遊戲程式的編寫&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/147818514" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/147818514"&gt;2015fallcp_b_w12_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;


&lt;h2&gt;CP W15&lt;/h2&gt;
&lt;h3&gt;介紹近端系統的建立與啟動, Python3 指令整理, 猜數字與猜顏色遊戲的流程圖, Brython 網頁繪圖&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/150000693" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/150000693"&gt;2015cp_w15_b1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CP W17&lt;/h2&gt;
&lt;h3&gt;說明如何使用 Python 函式, 以及如何進行 Brython 網頁動態繪圖&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/151096089" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/151096089"&gt;2015fallcpa_w17&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/151109576" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/151109576"&gt;2015fallcp_w17b&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="2015 Fall cp"></category><category term="2015 Fall"></category></entry><entry><title>2015 Fall CP part 1</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-cp-part-1.html" rel="alternate"></link><updated>2016-02-13T09:45:39+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-13:kmolab/blog/2015-fall-cp-part-1.html</id><summary type="html">&lt;p&gt;2015 Fall 計算機程式課程內容 part1&lt;/p&gt;
&lt;p&gt;2015 Fall 計算機程式課程倉儲分別為&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcpa"&gt;https://github.com/2015fallhw/2015fallcpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;與&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcpb"&gt;https://github.com/2015fallhw/2015fallcpb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2015 Fall CP 課程 part1 影片摘要:&lt;/p&gt;
&lt;h2&gt;CP W2&lt;/h2&gt;
&lt;h3&gt;2015 Fall 計算機程式可攜環境介紹&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140380091" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140380091"&gt;2015cp_w2_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;


&lt;h3&gt;說明如何利用 python -m http.server 分享近端檔案&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140381241" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140381241"&gt;2015cp_w2_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;介紹如何利用 fix.bat 修補 C 槽既有的可攜程式系統, 說明 SciTE 如何執行 Python3 程式, 如何利用 gh-pages 分支網頁繳交作業&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140383708" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140383708"&gt;2015cp_w2_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;介紹如何從可攜系統的修補與啟動, 到如何利用 Github Pages 的網頁來繳交各週作業&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140394246" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140394246"&gt;2015cp_b_w4&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;2015 Fall 課程工作與環境介紹&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140874547" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140874547"&gt;2015Fall 使用環境與工具介紹&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;英文打字的指法練習介紹, 說明 Github 倉儲的建立使用與刪除.&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140876400" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140876400"&gt;Github 倉儲建立, 使用與刪除&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;介紹 Github 倉儲分支的建立與使用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140878456" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140878456"&gt;Github 倉儲分支建立與使用&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CP W3&lt;/h2&gt;
&lt;h3&gt;隨身程式系統的應用再提醒 (fix.zip), Leo Editor, Pelican, Markdown 模組的安裝設定與啟動, notebook.py 中編碼的設定&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141129640" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141129640"&gt;2015fall_cp_w3_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/141142727" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141142727"&gt;2015cp_w3_b1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/141145747" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141145747"&gt;2015cp_w3_b3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/141144113" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141144113"&gt;2015cp_w3_b2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明工程師的工作分類, 工程與科學的相輔相成, 解釋何以人文是工程師的養份, 了解科學在探究自然現況, 工程則需面對自然挑戰, 解決人文想像與需求&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141131417" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141131417"&gt;2015fall_cp_w3_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何利用 Github 建立倉儲, 起始倉儲, git clone 倉儲, 建立分支, 切換 gh-pages 分支, 提交 gh-pages 分支版本, 推送分支版本&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141132740" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141132740"&gt;2015fall_cp_w3_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明 Python 程式執行模式, 可以採互動式執行, SciTE 環境下執行, Jupyter 網頁 noteook 環境下執行, Brython 瀏覽器中執行等&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141134146" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141134146"&gt;2015fall_cp_w3_4&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CP W5&lt;/h2&gt;
&lt;h3&gt;說明計算機程式作為電腦輔助與協同產品設計系列課程的先導課程, 必須在學習 Python3 程式語法的同時, 架構一個可以永續改進使用的系統&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142582837" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142582837"&gt;2015cp_w5_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;fix.zip 內容的細步流程介紹, 從 markdown 透過 Pelican 指令的執行, 轉換為放上 Github Pages 網頁的 html 檔案資料, liquid_tags 延伸程式的應用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142584067" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142584067"&gt;2015cp_w5_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CP W6&lt;/h2&gt;
&lt;h3&gt;介紹英文教學影片的字幕所在位置, 說明如利用 VLC 在近端播放教學影片&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143330980" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143330980"&gt;2015cp_w6_a_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何將各學員的作業整合到全班協同倉儲, 自行新增為全班倉儲的協同者&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143337293" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143337293"&gt;2015cp_w6_a_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/143345717" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143345717"&gt;2015cp_w6_b_4&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;示範如何修正內含 git 衝突標示的 Leo Editor 檔案&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143337483" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143337483"&gt;2015cp_w6_a_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CP W7&lt;/h2&gt;
&lt;h3&gt;介紹如何建立有效率的機械設計工程師可攜程式環境 (Anaconda Python based), 學習計算機程式的概念, 認識程式設計與機械設計工程師角色間的關係&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/144078159" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/144078159"&gt;2015_cp_w7_a_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明近端與 Jupyter 環境的 Python 程式執行, print 與 for 迴圈應用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/144080408" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/144080408"&gt;2015_cp_w7_a_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何將計算機程式的內容放到 gh-pages 網頁&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/144081268" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/144081268"&gt;2015_cp_w7_a_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何利用 git reset -- hard 版本編號, 回復舊版本資料&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/144089423" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/144089423"&gt;2015fall_cp_w7_b1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何修補被弄亂的全班倉儲&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/144089423" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/144089423"&gt;2015fall_cp_w7_b1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="2015 Fall cp"></category><category term="2015 Fall"></category></entry><entry><title>2015 Fall CADP part 2</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-cadp-part-2.html" rel="alternate"></link><updated>2016-02-13T09:45:39+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-13:kmolab/blog/2015-fall-cadp-part-2.html</id><summary type="html">&lt;p&gt;2015 Fall 電腦輔助設計實習課程內容 part2&lt;/p&gt;
&lt;p&gt;電腦輔助設計實習課程倉儲分別為:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcadpb"&gt;https://github.com/2015fallhw/2015fallcadpb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;與&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcadpa"&gt;https://github.com/2015fallhw/2015fallcadpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2015 Fall CADP 課程 part2 影片摘要:&lt;/p&gt;
&lt;h2&gt;CADP W10&lt;/h2&gt;
&lt;h3&gt;利用電腦解決機械設計工程師所面臨的各種問題&lt;/h3&gt;
&lt;p&gt;電腦輔助設計主要探討工程師該如何利用電腦解決所面臨的各種問題, 這些問題存在於人的各種活動當中, 而人的活動可以從3個不同的軸向來加以探討, 也就是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人文的軸向, 其中包括與人類思想層面有關的各種活動, 也就是文學, 宗教, 音樂與藝術等活動.&lt;/li&gt;
&lt;li&gt;科學的軸向, 其中牽涉到人所處的自然環境, 科學家主要在利用系統方法與工具, 探究存在自然界的各種原理原則, 而工程師在解決問題時, 必須面對自然界的各項挑戰, 依據各種已知的科學方法, 從人文的角度出發, 創造各種產品與服務, 來改善人的生存環境, 提升人的生活價值.&lt;/li&gt;
&lt;li&gt;產品與服務的軸向, 此一軸向的活動, 即是工程師以人文想像層面的內容作為養份, 面對自然環境, 以科學認知及方法, 創造各種產品與服務的項目.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;電腦在工程解題所扮演的角色:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提升資訊的傳輸效能, 利用網路, Git (2005 之後), Github (2008 之後) 讓數位資訊的傳輸更有效能.&lt;/li&gt;
&lt;li&gt;強化文字、視覺與口語的溝通效率, 以隨選或即時媒體, 讓協同成員互通想法, 闡述設計, 激發創意.&lt;/li&gt;
&lt;li&gt;簡化數據與資料的收集與儲存, 搜索引擎與資料庫的搭配使用.&lt;/li&gt;
&lt;li&gt;支援各種設計與運算分析所需要的軟硬體配備, CAD, CAE, 虛擬實境, 擴增實境, 平行運算等技術的支援.&lt;/li&gt;
&lt;li&gt;支援各種層面的製造規劃與管理, CAM, Computer Aided Process Planning 等.&lt;/li&gt;
&lt;/ol&gt;
&lt;iframe src="https://player.vimeo.com/video/145820006" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/145820006"&gt;2015cadp_w10_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;


&lt;h3&gt;介紹可攜程式系統的搭建流程與細節&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;首先下載與操作系統對應的 Miniconda (使用 Python3)&lt;/li&gt;
&lt;li&gt;利用 conda install pip&lt;/li&gt;
&lt;li&gt;利用 pip install pelican Markdown 安裝 pelican 與 Markdown 模組&lt;/li&gt;
&lt;li&gt;可以利用 pip uninstall leo 移除先前所安裝的 Leo Editor 模組&lt;/li&gt;
&lt;li&gt;利用 conda install pyqt (由 conda 自行選擇可以與既有系統相容的 pyqt 版本)&lt;/li&gt;
&lt;/ol&gt;
&lt;iframe src="https://player.vimeo.com/video/145825547" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/145825547"&gt;2015cadp_w10_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W11&lt;/h2&gt;
&lt;h3&gt;fix.zip 修補流程再介紹, 說明電腦輔助機械設計的目標&lt;/h3&gt;
&lt;p&gt;將隨身碟中的資料, 複製到電腦硬碟, 然後再利用 start.bat 啟動硬碟上的可攜程式系統.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/146592105" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/146592105"&gt;2015fallcadpw11_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;啟動存放在全班倉儲網頁中的分組報告&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/146593944" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/146593944"&gt;2015fallcadpw11_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W12&lt;/h2&gt;
&lt;h3&gt;fix.bat 的詳細介紹, Leo Editor 的近端 pip install 應用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/147276192" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/147276192"&gt;2015cadpb_w12_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;利用各自 user 目錄下的 Leo Editor 檔案, 發表位於全班 gh-pages 網頁的分組報告, 以電腦輔助方法管理 reveal.js 投影片中的學員學號註記, 介紹網頁式正齒輪齒面寬輔助設計, 說明正齒輪囓合繪製與組合的靜態繪圖與動態繪圖原理&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/147279887" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/147279887"&gt;2015cadpb_w12_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W13&lt;/h2&gt;
&lt;h3&gt;fix.bat 環境修補複習&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/148455580" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/148455580"&gt;cadpaw13_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何利用各學員 user/學號 目錄下的 .leo 檔案發表分組報告, 介紹如何利用 Github pages 展示零組件的 .stl 檔案&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/148458668" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/148458668"&gt;cadpaw13_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W14&lt;/h2&gt;
&lt;h3&gt;介紹Creo Parametric 零件轉檔方法, gh-pages 網頁上的零件展示, Binary 與 ASCII STL 檔案格式介紹&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/148825230" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/148825230"&gt;2015cadp_w14_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;Onshape 介紹, 開始利用 OnShape 繪製 Nutcracker 零組件&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/149359397" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/149359397"&gt;2015cadp_w14_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W15&lt;/h2&gt;
&lt;h3&gt;說明如何利用 Onshape, 以雲端協同方式繪製 Nutcracker 零件, 組立 Nutcracker 零件&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/149940498" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/149940498"&gt;2015cadp_w15_a1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W16&lt;/h2&gt;
&lt;h3&gt;介紹 Nutcracker 在 Onshape 環境中如何進行組立, 進行各種 Onshape 組立約束條件的細部特性討論&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/150140635" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/150140635"&gt;2015fall_cadp_b_w16&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;說明如何利用 Solvespace 分析 Nutcraker 機構的 Piston 滑動行程極限&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/150401255" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/150401255"&gt;2015fallcadp_a_w16_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W17&lt;/h2&gt;
&lt;h3&gt;Nutcracker 機構滑動 Piston 零件的滑動行程範圍分析, 說明如何以 Solvespace 圖解法, 以 Sympy 符號及數值分析推導機構邊界直線方程式, 或採基因演算法進行分析&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/150636968" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/150636968"&gt;2015fall_cadpb_w17&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/150985277" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/150985277"&gt;2015fallcadpa_w17&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="2015 Fall cadp"></category><category term="2015 Fall"></category></entry><entry><title>2015 Fall CADP part 1</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-cadp-part-1.html" rel="alternate"></link><updated>2016-02-13T09:45:39+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-13:kmolab/blog/2015-fall-cadp-part-1.html</id><summary type="html">&lt;p&gt;2015 Fall 電腦輔助設計實習課程內容 part1&lt;/p&gt;
&lt;p&gt;電腦輔助設計實習課程倉儲分別為:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcadpb"&gt;https://github.com/2015fallhw/2015fallcadpb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;與&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/2015fallhw/2015fallcadpa"&gt;https://github.com/2015fallhw/2015fallcadpa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2015 Fall CADP 課程 part1 影片摘要:&lt;/p&gt;
&lt;h2&gt;CADP W2&lt;/h2&gt;
&lt;h3&gt;介紹可攜程式環境的下載與使用&lt;/h3&gt;
&lt;p&gt;此一系統包括 Python3 程式環境, Leo Editor, Jupyter, 而每週作業則利用 reveal.js 製作網頁式投影片, 利用 Pelican 產生靜態網頁, 並且讓各學員可以在個人倉儲 gh-pages 與全班倉儲 gh-pages 網頁上來呈現各階段所完成的作業內容.&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/139886319" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/139886319"&gt;2015fallcadp_w2_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;


&lt;h3&gt;利用電腦輔助方法, 善用 USB 客製化資料與 C 槽的既有隨身系統, 設法修改 C 槽啟動的 start.bat 批次檔案, 建立符合需求的可攜程式環境.&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/139890840" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/139890840"&gt;2015cadp_w2_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;介紹 reveal.js 網頁式投影片的使用方法, 介紹 Github pages 倉儲分支 gh-pages 的用法.&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/139892322" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/139892322"&gt;2015cadp_w2_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;複習倉儲分支之間的切換方法 (git checkout master 或 git checkout gh-pages)&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/139893872" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/139893872"&gt;2015cadp_w2_6&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;Github 倉儲中 Leo Editor 5.1 版 @clean 節點指令與 reveal.js 網頁式投影片的用法.&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/139913541" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/139913541"&gt;2015cadp_w2_reveal&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;甲班 CADP W2&lt;/p&gt;
&lt;h3&gt;可攜程式系統的建立與使用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140277094" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140277094"&gt;2015cadpa_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;avi 影片轉 flv 格式, 以可攜式 VLC 觀看 flv 影片, 利用 python -m http.server 執行近端檔案分享&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140381241" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140381241"&gt;2015cp_w2_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;git push origin gh-pages 系列指令的應用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/140281702" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/140281702"&gt;2015cadpa_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W3&lt;/h2&gt;
&lt;h3&gt;Pelican 靜態網頁系統建立與分組協同, Solvespace 零件繪圖&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141021392" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141021392"&gt;2015_cadpa_w3_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;git rm 的使用, 以及 git 提交, 訊息註記與推送設定&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141024439" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141024439"&gt;2015_cadpa_w3_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;Solvespace 零件電腦輔助繪圖&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141026116" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141026116"&gt;2015_cadpa_w3_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W4&lt;/h2&gt;
&lt;h3&gt;根據 What Engineers Do? 電子文件, 說明科學與工程, 自然與人文間的關係&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/141370058" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/141370058"&gt;2015fall_cadp_w4_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W5&lt;/h2&gt;
&lt;h3&gt;從 2008 年舊資料的回顧, 說明在地化與國際化的整合, 培養有專長, 能就業, 說明文化與教育對工程師的重要影響, 以及追求卓越的本意&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142093273" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142093273"&gt;2015cadp_w5_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;zoomit.exe 在錄製電腦輔助設計說明流程上的應用, Leo Editor 與 Pelican 的使用&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142473037" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142473037"&gt;2015cadp_w5_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;電腦輔助設計系列課程的標準執行流程, 可攜, 永續與體貼的電腦輔助設計方法&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142093479" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142093479"&gt;2015cadp_w5_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;Creo2 primer 電子書的網頁化處理&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/142098889" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/142098889"&gt;2015cadp_w5_3&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W6&lt;/h2&gt;
&lt;h3&gt;啟動可攜系統, Waht Engineers Do? 與 Creo 2 Parametric Primer 資料摘要, Creo Parametric 零件繪製與組立, 開始建立全班協同 gh-pages 網頁, 自行新增為倉儲協同者, 從 git clone 開始參與全班資料協同&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143225578" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143225578"&gt;2015cadp_a_w6_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;CADP W7&lt;/h2&gt;
&lt;h2&gt;學員自行新增為全班協同倉儲的協同者, 示範如何參與網頁協同資料管理&lt;/h2&gt;
&lt;iframe src="https://player.vimeo.com/video/143572506" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143572506"&gt;2015fall_cadp_w7_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;start.bat 內容的修改, 設法透過 Jupyter 執行網頁式設計分析或協同網頁資料編輯&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143574887" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143574887"&gt;2015fall_cadp_w7_2&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h3&gt;期中報告內容說明, Creo 2 Parametric Primer 電子書閱讀與零件繪製與零件組操作練習&lt;/h3&gt;
&lt;iframe src="https://player.vimeo.com/video/143963816" width="500" height="375" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/143963816"&gt;2015cadp_w7_a1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="2015 Fall cadp"></category><category term="2015 Fall"></category></entry><entry><title>2016 WCM course</title><link href="http://chiamingyen.github.io/kmolab/blog/2016-wcm-course.html" rel="alternate"></link><updated>2016-02-13T09:45:39+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-02-13:kmolab/blog/2016-wcm-course.html</id><summary type="html">&lt;p&gt;2016 Spring 網際內容管理課程規劃&lt;/p&gt;
&lt;h2&gt;github pages 上的靜態網頁系統&lt;/h2&gt;
&lt;p&gt;Github pages, Leo Editor 與 Pelican site builder&lt;/p&gt;
&lt;h2&gt;html 與 Javascript (Brython based)&lt;/h2&gt;
&lt;h2&gt;Python3 的動態網頁 (Flask 與 SQLite based)&lt;/h2&gt;
&lt;p&gt;OpenShift Web Console: &lt;a href="https://www.openshift.com"&gt;https://www.openshift.com&lt;/a&gt; 與近端 Flask: &lt;a href="http://flask.pocoo.org"&gt;http://flask.pocoo.org&lt;/a&gt; based 網站程式開發&lt;/p&gt;


&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/embik/bloks"&gt;https://github.com/embik/bloks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterhudec/authomatic"&gt;https://github.com/peterhudec/authomatic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sigmavirus24/github3.py"&gt;https://github.com/sigmavirus24/github3.py&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="網際內容管理"></category><category term="2016 Spring"></category></entry><entry><title>2015 Fall Final Schedule</title><link href="http://chiamingyen.github.io/kmolab/blog/2015-fall-final-schedule.html" rel="alternate"></link><updated>2016-01-11T15:48:04+08:00</updated><author><name>yen</name></author><id>tag:chiamingyen.github.io,2016-01-11:kmolab/blog/2015-fall-final-schedule.html</id><summary type="html">&lt;p&gt;2015 Fall 學期成績評分時程規劃&lt;/p&gt;
&lt;p&gt;最後資料改版期限: 2016.01.20 (星期三) 24:00&lt;/p&gt;
&lt;p&gt;評分流程:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;從各班個人連結頁面中 (&lt;a href="https://github.com/2015fallhw/2015fallcadpa/wiki"&gt;2a&lt;/a&gt;, &lt;a href="https://github.com/2015fallhw/2015fallcadpb/wiki"&gt;2b&lt;/a&gt;, &lt;a href="https://github.com/2015fallhw/2015fallcpa/wiki"&gt;1a&lt;/a&gt;, &lt;a href="https://github.com/2015fallhw/2015fallcpa/wiki"&gt;1b&lt;/a&gt;), 進入各學員在各班倉儲中對應的&lt;strong&gt;個人 gh-pages 網頁&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;從上述頁面右下方的 Blogroll 中&lt;strong&gt;最下方&lt;/strong&gt;連結 (名稱為"學號 個人網頁"), 進入學員個人單獨的 gh-pages 網頁&lt;/li&gt;
&lt;li&gt;根據上述兩個頁面中的資料, 配合各課程的講授內容, 依據 &lt;strong&gt;投影片&lt;/strong&gt;, &lt;strong&gt;操作影片&lt;/strong&gt;以及頁面上的其他&lt;strong&gt;相關檔案資料&lt;/strong&gt;評分.&lt;/li&gt;
&lt;li&gt;從各班的協同網頁中, 各組所公佈的分組報告中的 &lt;strong&gt;投影片&lt;/strong&gt;, &lt;strong&gt;操作影片&lt;/strong&gt;以及頁面上的其他&lt;strong&gt;相關檔案資料&lt;/strong&gt;評分.&lt;/li&gt;
&lt;li&gt;cadp 課程另外將參酌學員所完成的 &lt;strong&gt;Solvespace 零件檔案&lt;/strong&gt;, &lt;strong&gt;Creo Parametric 零組件檔案&lt;/strong&gt;, Onshape 零組件檔案評分.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;2015 Fall 電腦輔助設計實習課程甲班:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cadpa 倉儲: &lt;a href="https://github.com/2015fallhw/2015fallcadpa"&gt;https://github.com/2015fallhw/2015fallcadpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cadpa 網頁: &lt;a href="http://2015fallhw.github.io/2015fallcadpa"&gt;http://2015fallhw.github.io/2015fallcadpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人連結: &lt;a href="https://github.com/2015fallhw/2015fallcadpa/wiki"&gt;https://github.com/2015fallhw/2015fallcadpa/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2015 Fall 電腦輔助設計實習課程乙班:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cadpb 倉儲: &lt;a href="https://github.com/2015fallhw/2015fallcadpb"&gt;https://github.com/2015fallhw/2015fallcadpb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cadpb 網頁: &lt;a href="http://2015fallhw.github.io/2015fallcadpb"&gt;http://2015fallhw.github.io/2015fallcadpb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人連結: &lt;a href="https://github.com/2015fallhw/2015fallcadpb/wiki"&gt;https://github.com/2015fallhw/2015fallcadpb/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2015 Fall 計算機程式課程甲班:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cpa 倉儲: &lt;a href="https://github.com/2015fallhw/2015fallcpa"&gt;https://github.com/2015fallhw/2015fallcpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cpa 網頁: &lt;a href="http://2015fallhw.github.io/2015fallcpa"&gt;http://2015fallhw.github.io/2015fallcpa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人連結: &lt;a href="https://github.com/2015fallhw/2015fallcpa/wiki"&gt;https://github.com/2015fallhw/2015fallcpa/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2015 Fall 計算機程式課程乙班:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cpb 倉儲: &lt;a href="https://github.com/2015fallhw/2015fallcpb"&gt;https://github.com/2015fallhw/2015fallcpb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cpb 網頁: &lt;a href="http://2015fallhw.github.io/2015fallcpb"&gt;http://2015fallhw.github.io/2015fallcpb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;個人連結: &lt;a href="https://github.com/2015fallhw/2015fallcpb/wiki"&gt;https://github.com/2015fallhw/2015fallcpb/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="2015 Fall"></category></entry></feed>